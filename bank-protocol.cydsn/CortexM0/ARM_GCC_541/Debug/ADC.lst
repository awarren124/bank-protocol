ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_Init, %function
  25              	ADC_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 2


  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000500u, 0x00001400u, 0x000014
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 3


  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 4


 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 1020     		movs	r0, #16
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  41              		.loc 1 173 0
  42 000a 4D49     		ldr	r1, .L14
  43 000c 1020     		movs	r0, #16
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0F22     		movs	r2, #15
  48 0014 4B4B     		ldr	r3, .L14+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 5


 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 4B4B     		ldr	r3, .L14+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L12
  56 0020 4A49     		ldr	r1, .L14+12
  57 0022 00E0     		b	.L2
  58              	.L12:
  59 0024 4A49     		ldr	r1, .L14+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 4B4A     		ldr	r2, .L14+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 4A4A     		ldr	r2, .L14+24
  68 0030 4A4B     		ldr	r3, .L14+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 4A4A     		ldr	r2, .L14+32
  72 0036 4B4B     		ldr	r3, .L14+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 4A4A     		ldr	r2, .L14+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 4A49     		ldr	r1, .L14+44
  80 0042 4B4A     		ldr	r2, .L14+48
  81 0044 1160     		str	r1, [r2]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 4B49     		ldr	r1, .L14+52
  84 0048 4B4A     		ldr	r2, .L14+56
  85 004a 1160     		str	r1, [r2]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  86              		.loc 1 197 0 discriminator 4
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 6


  87 004c 4B4A     		ldr	r2, .L14+60
  88 004e 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  89              		.loc 1 198 0 discriminator 4
  90 0050 4B4A     		ldr	r2, .L14+64
  91 0052 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  92              		.loc 1 199 0 discriminator 4
  93 0054 1122     		movs	r2, #17
  94 0056 4B4B     		ldr	r3, .L14+68
  95 0058 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
  96              		.loc 1 206 0 discriminator 4
  97 005a 4B49     		ldr	r1, .L14+72
  98 005c 0A68     		ldr	r2, [r1]
  99              	.LVL2:
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 100              		.loc 1 207 0 discriminator 4
 101 005e 4B4B     		ldr	r3, .L14+76
 102 0060 1340     		ands	r3, r2
 103              	.LVL3:
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 104              		.loc 1 218 0 discriminator 4
 105 0062 0122     		movs	r2, #1
 106 0064 1343     		orrs	r3, r2
 107              	.LVL4:
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 108              		.loc 1 226 0 discriminator 4
 109 0066 0B60     		str	r3, [r1]
 110              	.LVL5:
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 7


 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 111              		.loc 1 232 0 discriminator 4
 112 0068 0022     		movs	r2, #0
 113 006a 65E0     		b	.L3
 114              	.LVL6:
 115              	.L11:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 116              		.loc 1 234 0
 117 006c 4849     		ldr	r1, .L14+80
 118 006e 9300     		lsls	r3, r2, #2
 119 0070 5858     		ldr	r0, [r3, r1]
 120 0072 DC23     		movs	r3, #220
 121 0074 9B01     		lsls	r3, r3, #6
 122 0076 0340     		ands	r3, r0
 123              	.LVL7:
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 124              		.loc 1 236 0
 125 0078 8918     		adds	r1, r1, r2
 126 007a 097D     		ldrb	r1, [r1, #20]
 127 007c 0B43     		orrs	r3, r1
 128              	.LVL8:
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 129              		.loc 1 250 0
 130 007e 032A     		cmp	r2, #3
 131 0080 1CD8     		bhi	.L4
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 132              		.loc 1 253 0
 133 0082 9100     		lsls	r1, r2, #2
 134 0084 434C     		ldr	r4, .L14+84
 135 0086 A446     		mov	ip, r4
 136 0088 6144     		add	r1, r1, ip
 137 008a 0B60     		str	r3, [r1]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 138              		.loc 1 255 0
 139 008c C307     		lsls	r3, r0, #31
 140 008e 07D5     		bpl	.L5
 141              	.LVL9:
 256:Generated_Source\PSoC4/ADC.c ****             {
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 8


 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 142              		.loc 1 257 0
 143 0090 3A48     		ldr	r0, .L14+60
 144 0092 0168     		ldr	r1, [r0]
 145              	.LVL10:
 146 0094 0123     		movs	r3, #1
 147 0096 9340     		lsls	r3, r3, r2
 148 0098 1B04     		lsls	r3, r3, #16
 149 009a 1B0C     		lsrs	r3, r3, #16
 150 009c 0B43     		orrs	r3, r1
 151 009e 0360     		str	r3, [r0]
 152              	.LVL11:
 153              	.L5:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 154              		.loc 1 260 0
 155 00a0 9300     		lsls	r3, r2, #2
 156 00a2 3B49     		ldr	r1, .L14+80
 157              	.LVL12:
 158 00a4 5B58     		ldr	r3, [r3, r1]
 159 00a6 9B07     		lsls	r3, r3, #30
 160 00a8 21D5     		bpl	.L6
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 161              		.loc 1 262 0
 162 00aa 3548     		ldr	r0, .L14+64
 163 00ac 0168     		ldr	r1, [r0]
 164              	.LVL13:
 165 00ae 0123     		movs	r3, #1
 166 00b0 9340     		lsls	r3, r3, r2
 167 00b2 1B04     		lsls	r3, r3, #16
 168 00b4 1B0C     		lsrs	r3, r3, #16
 169 00b6 0B43     		orrs	r3, r1
 170 00b8 0360     		str	r3, [r0]
 171 00ba 18E0     		b	.L6
 172              	.LVL14:
 173              	.L4:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 174              		.loc 1 268 0
 175 00bc 8021     		movs	r1, #128
 176 00be C905     		lsls	r1, r1, #23
 177 00c0 0B43     		orrs	r3, r1
 178              	.LVL15:
 179 00c2 3549     		ldr	r1, .L14+88
 180 00c4 0B60     		str	r3, [r1]
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 181              		.loc 1 270 0
 182 00c6 9300     		lsls	r3, r2, #2
 183 00c8 3149     		ldr	r1, .L14+80
 184              	.LVL16:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 9


 185 00ca 5B58     		ldr	r3, [r3, r1]
 186 00cc DB07     		lsls	r3, r3, #31
 187 00ce 04D5     		bpl	.L7
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 188              		.loc 1 272 0
 189 00d0 2C49     		ldr	r1, .L14+68
 190              	.LVL17:
 191 00d2 0868     		ldr	r0, [r1]
 192              	.LVL18:
 193 00d4 2023     		movs	r3, #32
 194 00d6 0343     		orrs	r3, r0
 195 00d8 0B60     		str	r3, [r1]
 196              	.L7:
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 197              		.loc 1 275 0
 198 00da 9300     		lsls	r3, r2, #2
 199 00dc 2C49     		ldr	r1, .L14+80
 200              	.LVL19:
 201 00de 5B58     		ldr	r3, [r3, r1]
 202 00e0 9B07     		lsls	r3, r3, #30
 203 00e2 04D5     		bpl	.L6
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 204              		.loc 1 277 0
 205 00e4 2749     		ldr	r1, .L14+68
 206              	.LVL20:
 207 00e6 0868     		ldr	r0, [r1]
 208 00e8 4023     		movs	r3, #64
 209 00ea 0343     		orrs	r3, r0
 210 00ec 0B60     		str	r3, [r1]
 211              	.L6:
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 212              		.loc 1 282 0
 213 00ee 9300     		lsls	r3, r2, #2
 214 00f0 2749     		ldr	r1, .L14+80
 215              	.LVL21:
 216 00f2 5958     		ldr	r1, [r3, r1]
 217              	.LVL22:
 218 00f4 8B05     		lsls	r3, r1, #22
 219 00f6 02D5     		bpl	.L13
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 220              		.loc 1 284 0
 221 00f8 8020     		movs	r0, #128
 222 00fa 4000     		lsls	r0, r0, #1
 223 00fc 01E0     		b	.L8
 224              	.L13:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 10


 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 225              		.loc 1 288 0
 226 00fe 8020     		movs	r0, #128
 227 0100 4001     		lsls	r0, r0, #5
 228              	.L8:
 229              	.LVL23:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 230              		.loc 1 291 0
 231 0102 CB05     		lsls	r3, r1, #23
 232 0104 04D4     		bmi	.L9
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 233              		.loc 1 298 0
 234 0106 5300     		lsls	r3, r2, #1
 235 0108 0024     		movs	r4, #0
 236 010a 2449     		ldr	r1, .L14+92
 237 010c 5C52     		strh	r4, [r3, r1]
 238 010e 03E0     		b	.L10
 239              	.L9:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 240              		.loc 1 307 0
 241 0110 5300     		lsls	r3, r2, #1
 242 0112 0024     		movs	r4, #0
 243 0114 2149     		ldr	r1, .L14+92
 244 0116 5C52     		strh	r4, [r3, r1]
 245              	.L10:
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 246              		.loc 1 311 0 discriminator 2
 247 0118 214B     		ldr	r3, .L14+96
 248 011a 4343     		muls	r3, r0
 249 011c 8021     		movs	r1, #128
 250 011e C900     		lsls	r1, r1, #3
 251 0120 8C46     		mov	ip, r1
 252 0122 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 253              		.loc 1 312 0 discriminator 2
 254 0124 D917     		asrs	r1, r3, #31
 255 0126 4905     		lsls	r1, r1, #21
 256 0128 490D     		lsrs	r1, r1, #21
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 11


 257 012a CB18     		adds	r3, r1, r3
 258 012c DB12     		asrs	r3, r3, #11
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 259              		.loc 1 311 0 discriminator 2
 260 012e 1BB2     		sxth	r3, r3
 261 0130 9000     		lsls	r0, r2, #2
 262              	.LVL24:
 263 0132 1C49     		ldr	r1, .L14+100
 264 0134 4350     		str	r3, [r0, r1]
 232:Generated_Source\PSoC4/ADC.c ****     {
 265              		.loc 1 232 0 discriminator 2
 266 0136 0132     		adds	r2, r2, #1
 267              	.LVL25:
 268              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 269              		.loc 1 232 0 is_stmt 0 discriminator 1
 270 0138 042A     		cmp	r2, #4
 271 013a 97D9     		bls	.L11
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 272              		.loc 1 314 0 is_stmt 1
 273              		@ sp needed
 274 013c 10BD     		pop	{r4, pc}
 275              	.L15:
 276 013e C046     		.align	2
 277              	.L14:
 278 0140 00000000 		.word	ADC_ISR
 279 0144 20003A40 		.word	1077542944
 280 0148 80033A40 		.word	1077543808
 281 014c 402E1013 		.word	319827520
 282 0150 402E0013 		.word	318778944
 283 0154 00003A40 		.word	1077542912
 284 0158 A8000080 		.word	-2147483480
 285 015c 04003A40 		.word	1077542916
 286 0160 0000FF07 		.word	134152192
 287 0164 18003A40 		.word	1077542936
 288 0168 1C003A40 		.word	1077542940
 289 016c E9030400 		.word	263145
 290 0170 10003A40 		.word	1077542928
 291 0174 04000400 		.word	262148
 292 0178 14003A40 		.word	1077542932
 293 017c 28023A40 		.word	1077543464
 294 0180 38023A40 		.word	1077543480
 295 0184 18023A40 		.word	1077543448
 296 0188 30003A40 		.word	1077542960
 297 018c FFFFFFDF 		.word	-536870913
 298 0190 00000000 		.word	.LANCHOR0
 299 0194 80003A40 		.word	1077543040
 300 0198 80023A40 		.word	1077543552
 301 019c 00000000 		.word	ADC_offset
 302 01a0 10270000 		.word	10000
 303 01a4 00000000 		.word	ADC_countsPer10Volt
 304              		.cfi_endproc
 305              	.LFE2:
 306              		.size	ADC_Init, .-ADC_Init
 307              		.section	.text.ADC_Enable,"ax",%progbits
 308              		.align	2
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 12


 309              		.global	ADC_Enable
 310              		.code	16
 311              		.thumb_func
 312              		.type	ADC_Enable, %function
 313              	ADC_Enable:
 314              	.LFB3:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 315              		.loc 1 331 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 10B5     		push	{r4, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 323              		.loc 1 332 0
 324 0002 094B     		ldr	r3, .L19
 325 0004 1B68     		ldr	r3, [r3]
 326 0006 002B     		cmp	r3, #0
 327 0008 0CDB     		blt	.L16
 328              	.L18:
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 329              		.loc 1 336 0 discriminator 1
 330 000a 084B     		ldr	r3, .L19+4
 331 000c 1B68     		ldr	r3, [r3]
 332 000e 002B     		cmp	r3, #0
 333 0010 FBDB     		blt	.L18
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 334              		.loc 1 342 0
 335 0012 054A     		ldr	r2, .L19
 336 0014 1368     		ldr	r3, [r2]
 337 0016 8021     		movs	r1, #128
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 13


 338 0018 0906     		lsls	r1, r1, #24
 339 001a 0B43     		orrs	r3, r1
 340 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 341              		.loc 1 345 0
 342 001e 0A20     		movs	r0, #10
 343 0020 FFF7FEFF 		bl	CyDelayUs
 344              	.LVL26:
 345              	.L16:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 346              		.loc 1 347 0
 347              		@ sp needed
 348 0024 10BD     		pop	{r4, pc}
 349              	.L20:
 350 0026 C046     		.align	2
 351              	.L19:
 352 0028 00003A40 		.word	1077542912
 353 002c 08023A40 		.word	1077543432
 354              		.cfi_endproc
 355              	.LFE3:
 356              		.size	ADC_Enable, .-ADC_Enable
 357              		.section	.text.ADC_Start,"ax",%progbits
 358              		.align	2
 359              		.global	ADC_Start
 360              		.code	16
 361              		.thumb_func
 362              		.type	ADC_Start, %function
 363              	ADC_Start:
 364              	.LFB1:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 365              		.loc 1 64 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 10B5     		push	{r4, lr}
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 4, -8
 372              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 373              		.loc 1 66 0
 374 0002 064B     		ldr	r3, .L23
 375 0004 1B78     		ldrb	r3, [r3]
 376 0006 002B     		cmp	r3, #0
 377 0008 04D1     		bne	.L22
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 378              		.loc 1 68 0
 379 000a FFF7FEFF 		bl	ADC_Init
 380              	.LVL27:
  69:Generated_Source\PSoC4/ADC.c ****     }
 381              		.loc 1 69 0
 382 000e 0122     		movs	r2, #1
 383 0010 024B     		ldr	r3, .L23
 384 0012 1A70     		strb	r2, [r3]
 385              	.L22:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 14


  71:Generated_Source\PSoC4/ADC.c **** }
 386              		.loc 1 71 0
 387 0014 FFF7FEFF 		bl	ADC_Enable
 388              	.LVL28:
  72:Generated_Source\PSoC4/ADC.c **** 
 389              		.loc 1 72 0
 390              		@ sp needed
 391 0018 10BD     		pop	{r4, pc}
 392              	.L24:
 393 001a C046     		.align	2
 394              	.L23:
 395 001c 00000000 		.word	.LANCHOR1
 396              		.cfi_endproc
 397              	.LFE1:
 398              		.size	ADC_Start, .-ADC_Start
 399              		.section	.text.ADC_Stop,"ax",%progbits
 400              		.align	2
 401              		.global	ADC_Stop
 402              		.code	16
 403              		.thumb_func
 404              		.type	ADC_Stop, %function
 405              	ADC_Stop:
 406              	.LFB4:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 407              		.loc 1 366 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 412              		.loc 1 367 0
 413 0000 024A     		ldr	r2, .L26
 414 0002 1368     		ldr	r3, [r2]
 415 0004 5B00     		lsls	r3, r3, #1
 416 0006 5B08     		lsrs	r3, r3, #1
 417 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 418              		.loc 1 368 0
 419              		@ sp needed
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 15


 420 000a 7047     		bx	lr
 421              	.L27:
 422              		.align	2
 423              	.L26:
 424 000c 00003A40 		.word	1077542912
 425              		.cfi_endproc
 426              	.LFE4:
 427              		.size	ADC_Stop, .-ADC_Stop
 428              		.section	.text.ADC_StartConvert,"ax",%progbits
 429              		.align	2
 430              		.global	ADC_StartConvert
 431              		.code	16
 432              		.thumb_func
 433              		.type	ADC_StartConvert, %function
 434              	ADC_StartConvert:
 435              	.LFB5:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 436              		.loc 1 392 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 441              		.loc 1 394 0
 442 0000 034A     		ldr	r2, .L29
 443 0002 1368     		ldr	r3, [r2]
 444 0004 8021     		movs	r1, #128
 445 0006 4902     		lsls	r1, r1, #9
 446 0008 0B43     		orrs	r3, r1
 447 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 16


 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 448              		.loc 1 399 0
 449              		@ sp needed
 450 000c 7047     		bx	lr
 451              	.L30:
 452 000e C046     		.align	2
 453              	.L29:
 454 0010 04003A40 		.word	1077542916
 455              		.cfi_endproc
 456              	.LFE5:
 457              		.size	ADC_StartConvert, .-ADC_StartConvert
 458              		.section	.text.ADC_StopConvert,"ax",%progbits
 459              		.align	2
 460              		.global	ADC_StopConvert
 461              		.code	16
 462              		.thumb_func
 463              		.type	ADC_StopConvert, %function
 464              	ADC_StopConvert:
 465              	.LFB6:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 466              		.loc 1 417 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 471              		.loc 1 419 0
 472 0000 024A     		ldr	r2, .L32
 473 0002 1168     		ldr	r1, [r2]
 474 0004 024B     		ldr	r3, .L32+4
 475 0006 0B40     		ands	r3, r1
 476 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 477              		.loc 1 421 0
 478              		@ sp needed
 479 000a 7047     		bx	lr
 480              	.L33:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 17


 481              		.align	2
 482              	.L32:
 483 000c 04003A40 		.word	1077542916
 484 0010 FFFFFEFF 		.word	-65537
 485              		.cfi_endproc
 486              	.LFE6:
 487              		.size	ADC_StopConvert, .-ADC_StopConvert
 488              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 489              		.align	2
 490              		.global	ADC_IsEndConversion
 491              		.code	16
 492              		.thumb_func
 493              		.type	ADC_IsEndConversion, %function
 494              	ADC_IsEndConversion:
 495              	.LFB7:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 496              		.loc 1 451 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501              	.LVL29:
 502 0000 0100     		movs	r1, r0
 503              	.LVL30:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 504              		.loc 1 454 0
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 18


 505 0002 8307     		lsls	r3, r0, #30
 506 0004 0CD0     		beq	.L41
 507              	.LVL31:
 508              	.L37:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 509              		.loc 1 458 0 discriminator 2
 510 0006 104B     		ldr	r3, .L42
 511 0008 1B68     		ldr	r3, [r3]
 512 000a 0120     		movs	r0, #1
 513 000c 1840     		ands	r0, r3
 514              	.LVL32:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 515              		.loc 1 459 0 discriminator 2
 516 000e 01D1     		bne	.L36
 517              		.loc 1 459 0 is_stmt 0 discriminator 1
 518 0010 8B07     		lsls	r3, r1, #30
 519 0012 F8D4     		bmi	.L37
 520              	.L36:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 521              		.loc 1 461 0 is_stmt 1
 522 0014 0028     		cmp	r0, #0
 523 0016 04D0     		beq	.L35
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 524              		.loc 1 464 0
 525 0018 0122     		movs	r2, #1
 526 001a 0B4B     		ldr	r3, .L42
 527 001c 1A60     		str	r2, [r3]
 528 001e 00E0     		b	.L35
 529              	.LVL33:
 530              	.L41:
 452:Generated_Source\PSoC4/ADC.c **** 
 531              		.loc 1 452 0
 532 0020 0020     		movs	r0, #0
 533              	.LVL34:
 534              	.L35:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 535              		.loc 1 469 0
 536 0022 0C23     		movs	r3, #12
 537 0024 0B42     		tst	r3, r1
 538 0026 0DD0     		beq	.L38
 539              	.L40:
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 540              		.loc 1 473 0
 541 0028 074B     		ldr	r3, .L42
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 19


 542 002a 1A68     		ldr	r2, [r3]
 543 002c 1023     		movs	r3, #16
 544 002e 1A40     		ands	r2, r3
 545 0030 1043     		orrs	r0, r2
 546              	.LVL35:
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 547              		.loc 1 474 0
 548 0032 0340     		ands	r3, r0
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 549              		.loc 1 475 0
 550 0034 01D1     		bne	.L39
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 551              		.loc 1 474 0 discriminator 1
 552 0036 0A07     		lsls	r2, r1, #28
 553 0038 F6D4     		bmi	.L40
 554              	.L39:
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 555              		.loc 1 477 0
 556 003a 002B     		cmp	r3, #0
 557 003c 02D0     		beq	.L38
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 558              		.loc 1 480 0
 559 003e 1022     		movs	r2, #16
 560 0040 014B     		ldr	r3, .L42
 561 0042 1A60     		str	r2, [r3]
 562              	.L38:
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 563              		.loc 1 486 0
 564              		@ sp needed
 565 0044 7047     		bx	lr
 566              	.L43:
 567 0046 C046     		.align	2
 568              	.L42:
 569 0048 10023A40 		.word	1077543440
 570              		.cfi_endproc
 571              	.LFE7:
 572              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 573              		.section	.text.ADC_GetResult16,"ax",%progbits
 574              		.align	2
 575              		.global	ADC_GetResult16
 576              		.code	16
 577              		.thumb_func
 578              		.type	ADC_GetResult16, %function
 579              	ADC_GetResult16:
 580              	.LFB8:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 20


 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 581              		.loc 1 505 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              	.LVL36:
 586 0000 10B5     		push	{r4, lr}
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 4, -8
 589              		.cfi_offset 14, -4
 590 0002 0400     		movs	r4, r0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 591              		.loc 1 509 0
 592 0004 0428     		cmp	r0, #4
 593 0006 02D9     		bls	.L45
 594              		.loc 1 509 0 is_stmt 0 discriminator 1
 595 0008 0020     		movs	r0, #0
 596              	.LVL37:
 597 000a FFF7FEFF 		bl	CyHalt
 598              	.LVL38:
 599              	.L45:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 600              		.loc 1 511 0 is_stmt 1
 601 000e 032C     		cmp	r4, #3
 602 0010 07D8     		bhi	.L46
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 603              		.loc 1 513 0
 604 0012 A400     		lsls	r4, r4, #2
 605              	.LVL39:
 606 0014 064B     		ldr	r3, .L48
 607 0016 9C46     		mov	ip, r3
 608 0018 6444     		add	r4, r4, ip
 609 001a 2068     		ldr	r0, [r4]
 610 001c 0004     		lsls	r0, r0, #16
 611 001e 000C     		lsrs	r0, r0, #16
 612              	.LVL40:
 613 0020 03E0     		b	.L47
 614              	.LVL41:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 21


 615              	.L46:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 616              		.loc 1 519 0
 617 0022 044B     		ldr	r3, .L48+4
 618 0024 1868     		ldr	r0, [r3]
 619 0026 0004     		lsls	r0, r0, #16
 620 0028 000C     		lsrs	r0, r0, #16
 621              	.LVL42:
 622              	.L47:
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 623              		.loc 1 525 0
 624 002a 00B2     		sxth	r0, r0
 625              	.LVL43:
 526:Generated_Source\PSoC4/ADC.c **** }
 626              		.loc 1 526 0
 627              		@ sp needed
 628 002c 10BD     		pop	{r4, pc}
 629              	.L49:
 630 002e C046     		.align	2
 631              	.L48:
 632 0030 80013A40 		.word	1077543296
 633 0034 90023A40 		.word	1077543568
 634              		.cfi_endproc
 635              	.LFE8:
 636              		.size	ADC_GetResult16, .-ADC_GetResult16
 637              		.section	.text.ADC_SetChanMask,"ax",%progbits
 638              		.align	2
 639              		.global	ADC_SetChanMask
 640              		.code	16
 641              		.thumb_func
 642              		.type	ADC_SetChanMask, %function
 643              	ADC_SetChanMask:
 644              	.LFB9:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 22


 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 645              		.loc 1 550 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650              	.LVL44:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 651              		.loc 1 551 0
 652 0000 0F23     		movs	r3, #15
 653 0002 1840     		ands	r0, r3
 654              	.LVL45:
 655 0004 014B     		ldr	r3, .L51
 656 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 657              		.loc 1 552 0
 658              		@ sp needed
 659 0008 7047     		bx	lr
 660              	.L52:
 661 000a C046     		.align	2
 662              	.L51:
 663 000c 20003A40 		.word	1077542944
 664              		.cfi_endproc
 665              	.LFE9:
 666              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 667              		.section	.text.ADC_EnableInjection,"ax",%progbits
 668              		.align	2
 669              		.global	ADC_EnableInjection
 670              		.code	16
 671              		.thumb_func
 672              		.type	ADC_EnableInjection, %function
 673              	ADC_EnableInjection:
 674              	.LFB10:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 23


 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 675              		.loc 1 572 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 680              		.loc 1 573 0
 681 0000 034A     		ldr	r2, .L54
 682 0002 1368     		ldr	r3, [r2]
 683 0004 8021     		movs	r1, #128
 684 0006 0906     		lsls	r1, r1, #24
 685 0008 0B43     		orrs	r3, r1
 686 000a 1360     		str	r3, [r2]
 574:Generated_Source\PSoC4/ADC.c ****     }
 687              		.loc 1 574 0
 688              		@ sp needed
 689 000c 7047     		bx	lr
 690              	.L55:
 691 000e C046     		.align	2
 692              	.L54:
 693 0010 80023A40 		.word	1077543552
 694              		.cfi_endproc
 695              	.LFE10:
 696              		.size	ADC_EnableInjection, .-ADC_EnableInjection
 697              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 698              		.align	2
 699              		.global	ADC_SetLowLimit
 700              		.code	16
 701              		.thumb_func
 702              		.type	ADC_SetLowLimit, %function
 703              	ADC_SetLowLimit:
 704              	.LFB11:
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 24


 705              		.loc 1 594 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 710              	.LVL46:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 711              		.loc 1 595 0
 712 0000 054A     		ldr	r2, .L57
 713 0002 1368     		ldr	r3, [r2]
 714 0004 1B0C     		lsrs	r3, r3, #16
 715 0006 1B04     		lsls	r3, r3, #16
 716 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 717              		.loc 1 596 0
 718 000a 1368     		ldr	r3, [r2]
 719 000c 0004     		lsls	r0, r0, #16
 720              	.LVL47:
 721 000e 000C     		lsrs	r0, r0, #16
 722 0010 1843     		orrs	r0, r3
 723 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 724              		.loc 1 597 0
 725              		@ sp needed
 726 0014 7047     		bx	lr
 727              	.L58:
 728 0016 C046     		.align	2
 729              	.L57:
 730 0018 18003A40 		.word	1077542936
 731              		.cfi_endproc
 732              	.LFE11:
 733              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 734              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 735              		.align	2
 736              		.global	ADC_SetHighLimit
 737              		.code	16
 738              		.thumb_func
 739              		.type	ADC_SetHighLimit, %function
 740              	ADC_SetHighLimit:
 741              	.LFB12:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 25


 615:Generated_Source\PSoC4/ADC.c **** {
 742              		.loc 1 615 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747              	.LVL48:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 748              		.loc 1 616 0
 749 0000 044A     		ldr	r2, .L60
 750 0002 1368     		ldr	r3, [r2]
 751 0004 1B04     		lsls	r3, r3, #16
 752 0006 1B0C     		lsrs	r3, r3, #16
 753 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 754              		.loc 1 617 0
 755 000a 1368     		ldr	r3, [r2]
 756 000c 0004     		lsls	r0, r0, #16
 757              	.LVL49:
 758 000e 1843     		orrs	r0, r3
 759 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 760              		.loc 1 618 0
 761              		@ sp needed
 762 0012 7047     		bx	lr
 763              	.L61:
 764              		.align	2
 765              	.L60:
 766 0014 18003A40 		.word	1077542936
 767              		.cfi_endproc
 768              	.LFE12:
 769              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 770              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 771              		.align	2
 772              		.global	ADC_SetLimitMask
 773              		.code	16
 774              		.thumb_func
 775              		.type	ADC_SetLimitMask, %function
 776              	ADC_SetLimitMask:
 777              	.LFB13:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 26


 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 778              		.loc 1 639 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 783              	.LVL50:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 784              		.loc 1 640 0
 785 0000 0F23     		movs	r3, #15
 786 0002 1840     		ands	r0, r3
 787              	.LVL51:
 788 0004 014B     		ldr	r3, .L63
 789 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 790              		.loc 1 641 0
 791              		@ sp needed
 792 0008 7047     		bx	lr
 793              	.L64:
 794 000a C046     		.align	2
 795              	.L63:
 796 000c 38023A40 		.word	1077543480
 797              		.cfi_endproc
 798              	.LFE13:
 799              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 800              		.section	.text.ADC_SetSatMask,"ax",%progbits
 801              		.align	2
 802              		.global	ADC_SetSatMask
 803              		.code	16
 804              		.thumb_func
 805              		.type	ADC_SetSatMask, %function
 806              	ADC_SetSatMask:
 807              	.LFB14:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 27


 808              		.loc 1 662 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		@ link register save eliminated.
 813              	.LVL52:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 814              		.loc 1 663 0
 815 0000 0F23     		movs	r3, #15
 816 0002 1840     		ands	r0, r3
 817              	.LVL53:
 818 0004 014B     		ldr	r3, .L66
 819 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 820              		.loc 1 664 0
 821              		@ sp needed
 822 0008 7047     		bx	lr
 823              	.L67:
 824 000a C046     		.align	2
 825              	.L66:
 826 000c 28023A40 		.word	1077543464
 827              		.cfi_endproc
 828              	.LFE14:
 829              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 830              		.section	.text.ADC_SetOffset,"ax",%progbits
 831              		.align	2
 832              		.global	ADC_SetOffset
 833              		.code	16
 834              		.thumb_func
 835              		.type	ADC_SetOffset, %function
 836              	ADC_SetOffset:
 837              	.LFB15:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 28


 690:Generated_Source\PSoC4/ADC.c **** {
 838              		.loc 1 690 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              	.LVL54:
 843 0000 70B5     		push	{r4, r5, r6, lr}
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 4, -16
 846              		.cfi_offset 5, -12
 847              		.cfi_offset 6, -8
 848              		.cfi_offset 14, -4
 849 0002 0400     		movs	r4, r0
 850 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 851              		.loc 1 692 0
 852 0006 0428     		cmp	r0, #4
 853 0008 02D9     		bls	.L69
 854              		.loc 1 692 0 is_stmt 0 discriminator 1
 855 000a 0020     		movs	r0, #0
 856              	.LVL55:
 857 000c FFF7FEFF 		bl	CyHalt
 858              	.LVL56:
 859              	.L69:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 860              		.loc 1 694 0 is_stmt 1
 861 0010 6400     		lsls	r4, r4, #1
 862              	.LVL57:
 863 0012 014B     		ldr	r3, .L70
 864 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 865              		.loc 1 695 0
 866              		@ sp needed
 867 0016 70BD     		pop	{r4, r5, r6, pc}
 868              	.L71:
 869              		.align	2
 870              	.L70:
 871 0018 00000000 		.word	ADC_offset
 872              		.cfi_endproc
 873              	.LFE15:
 874              		.size	ADC_SetOffset, .-ADC_SetOffset
 875              		.section	.text.ADC_SetGain,"ax",%progbits
 876              		.align	2
 877              		.global	ADC_SetGain
 878              		.code	16
 879              		.thumb_func
 880              		.type	ADC_SetGain, %function
 881              	ADC_SetGain:
 882              	.LFB16:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 29


 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 883              		.loc 1 724 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              	.LVL58:
 888 0000 70B5     		push	{r4, r5, r6, lr}
 889              		.cfi_def_cfa_offset 16
 890              		.cfi_offset 4, -16
 891              		.cfi_offset 5, -12
 892              		.cfi_offset 6, -8
 893              		.cfi_offset 14, -4
 894 0002 0400     		movs	r4, r0
 895 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 896              		.loc 1 726 0
 897 0006 0428     		cmp	r0, #4
 898 0008 02D9     		bls	.L73
 899              		.loc 1 726 0 is_stmt 0 discriminator 1
 900 000a 0020     		movs	r0, #0
 901              	.LVL59:
 902 000c FFF7FEFF 		bl	CyHalt
 903              	.LVL60:
 904              	.L73:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 905              		.loc 1 728 0 is_stmt 1
 906 0010 A400     		lsls	r4, r4, #2
 907              	.LVL61:
 908 0012 014B     		ldr	r3, .L74
 909 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 910              		.loc 1 729 0
 911              		@ sp needed
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 30


 912              	.LVL62:
 913 0016 70BD     		pop	{r4, r5, r6, pc}
 914              	.L75:
 915              		.align	2
 916              	.L74:
 917 0018 00000000 		.word	ADC_countsPer10Volt
 918              		.cfi_endproc
 919              	.LFE16:
 920              		.size	ADC_SetGain, .-ADC_SetGain
 921              		.global	__aeabi_idiv
 922              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 923              		.align	2
 924              		.global	ADC_CountsTo_mVolts
 925              		.code	16
 926              		.thumb_func
 927              		.type	ADC_CountsTo_mVolts, %function
 928              	ADC_CountsTo_mVolts:
 929              	.LFB17:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 930              		.loc 1 757 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              	.LVL63:
 935 0000 70B5     		push	{r4, r5, r6, lr}
 936              		.cfi_def_cfa_offset 16
 937              		.cfi_offset 4, -16
 938              		.cfi_offset 5, -12
 939              		.cfi_offset 6, -8
 940              		.cfi_offset 14, -4
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 31


 941 0002 0400     		movs	r4, r0
 942 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 943              		.loc 1 761 0
 944 0006 0428     		cmp	r0, #4
 945 0008 02D9     		bls	.L77
 946              		.loc 1 761 0 is_stmt 0 discriminator 1
 947 000a 0020     		movs	r0, #0
 948              	.LVL64:
 949 000c FFF7FEFF 		bl	CyHalt
 950              	.LVL65:
 951              	.L77:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 952              		.loc 1 772 0 is_stmt 1
 953 0010 6300     		lsls	r3, r4, #1
 954 0012 0F4A     		ldr	r2, .L80
 955 0014 995A     		ldrh	r1, [r3, r2]
 956 0016 09B2     		sxth	r1, r1
 957 0018 691A     		subs	r1, r5, r1
 958 001a 09B2     		sxth	r1, r1
 959              	.LVL66:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 960              		.loc 1 774 0
 961 001c 0D48     		ldr	r0, .L80+4
 962 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 963              		.loc 1 775 0
 964 0020 0029     		cmp	r1, #0
 965 0022 06DD     		ble	.L78
 966              		.loc 1 775 0 is_stmt 0 discriminator 1
 967 0024 A300     		lsls	r3, r4, #2
 968 0026 0C4A     		ldr	r2, .L80+8
 969 0028 9A58     		ldr	r2, [r3, r2]
 970 002a D30F     		lsrs	r3, r2, #31
 971 002c 9A18     		adds	r2, r3, r2
 972 002e 5310     		asrs	r3, r2, #1
 973 0030 06E0     		b	.L79
 974              	.L78:
 975              		.loc 1 775 0 discriminator 2
 976 0032 A300     		lsls	r3, r4, #2
 977 0034 084A     		ldr	r2, .L80+8
 978 0036 9A58     		ldr	r2, [r3, r2]
 979 0038 D30F     		lsrs	r3, r2, #31
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 32


 980 003a 9A18     		adds	r2, r3, r2
 981 003c 5210     		asrs	r2, r2, #1
 982 003e 5342     		rsbs	r3, r2, #0
 983              	.L79:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 984              		.loc 1 774 0 is_stmt 1
 985 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 986              		.loc 1 776 0
 987 0042 A400     		lsls	r4, r4, #2
 988              	.LVL67:
 989 0044 044B     		ldr	r3, .L80+8
 990 0046 E158     		ldr	r1, [r4, r3]
 991              	.LVL68:
 992 0048 FFF7FEFF 		bl	__aeabi_idiv
 993              	.LVL69:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 994              		.loc 1 774 0
 995 004c 00B2     		sxth	r0, r0
 996              	.LVL70:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
 997              		.loc 1 779 0
 998              		@ sp needed
 999 004e 70BD     		pop	{r4, r5, r6, pc}
 1000              	.L81:
 1001              		.align	2
 1002              	.L80:
 1003 0050 00000000 		.word	ADC_offset
 1004 0054 10270000 		.word	10000
 1005 0058 00000000 		.word	ADC_countsPer10Volt
 1006              		.cfi_endproc
 1007              	.LFE17:
 1008              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1009              		.global	__aeabi_lmul
 1010              		.global	__aeabi_ldivmod
 1011              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1012              		.align	2
 1013              		.global	ADC_CountsTo_uVolts
 1014              		.code	16
 1015              		.thumb_func
 1016              		.type	ADC_CountsTo_uVolts, %function
 1017              	ADC_CountsTo_uVolts:
 1018              	.LFB18:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 33


 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 1019              		.loc 1 811 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              	.LVL71:
 1024 0000 70B5     		push	{r4, r5, r6, lr}
 1025              		.cfi_def_cfa_offset 16
 1026              		.cfi_offset 4, -16
 1027              		.cfi_offset 5, -12
 1028              		.cfi_offset 6, -8
 1029              		.cfi_offset 14, -4
 1030 0002 0500     		movs	r5, r0
 1031 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1032              		.loc 1 815 0
 1033 0006 0428     		cmp	r0, #4
 1034 0008 02D9     		bls	.L83
 1035              		.loc 1 815 0 is_stmt 0 discriminator 1
 1036 000a 0020     		movs	r0, #0
 1037              	.LVL72:
 1038 000c FFF7FEFF 		bl	CyHalt
 1039              	.LVL73:
 1040              	.L83:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 34


 1041              		.loc 1 826 0 is_stmt 1
 1042 0010 6A00     		lsls	r2, r5, #1
 1043 0012 084B     		ldr	r3, .L84
 1044 0014 D05A     		ldrh	r0, [r2, r3]
 1045 0016 00B2     		sxth	r0, r0
 1046 0018 201A     		subs	r0, r4, r0
 1047 001a 00B2     		sxth	r0, r0
 1048              	.LVL74:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1049              		.loc 1 828 0
 1050 001c C117     		asrs	r1, r0, #31
 1051 001e 064A     		ldr	r2, .L84+4
 1052 0020 0023     		movs	r3, #0
 1053 0022 FFF7FEFF 		bl	__aeabi_lmul
 1054              	.LVL75:
 1055 0026 AD00     		lsls	r5, r5, #2
 1056              	.LVL76:
 1057 0028 044B     		ldr	r3, .L84+8
 1058 002a EA58     		ldr	r2, [r5, r3]
 1059 002c D317     		asrs	r3, r2, #31
 1060 002e FFF7FEFF 		bl	__aeabi_ldivmod
 1061              	.LVL77:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 1062              		.loc 1 831 0
 1063              		@ sp needed
 1064 0032 70BD     		pop	{r4, r5, r6, pc}
 1065              	.L85:
 1066              		.align	2
 1067              	.L84:
 1068 0034 00000000 		.word	ADC_offset
 1069 0038 80969800 		.word	10000000
 1070 003c 00000000 		.word	ADC_countsPer10Volt
 1071              		.cfi_endproc
 1072              	.LFE18:
 1073              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1074              		.global	__aeabi_i2f
 1075              		.global	__aeabi_fmul
 1076              		.global	__aeabi_fdiv
 1077              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1078              		.align	2
 1079              		.global	ADC_CountsTo_Volts
 1080              		.code	16
 1081              		.thumb_func
 1082              		.type	ADC_CountsTo_Volts, %function
 1083              	ADC_CountsTo_Volts:
 1084              	.LFB19:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 35


 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 1085              		.loc 1 856 0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089              	.LVL78:
 1090 0000 70B5     		push	{r4, r5, r6, lr}
 1091              		.cfi_def_cfa_offset 16
 1092              		.cfi_offset 4, -16
 1093              		.cfi_offset 5, -12
 1094              		.cfi_offset 6, -8
 1095              		.cfi_offset 14, -4
 1096 0002 0400     		movs	r4, r0
 1097 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1098              		.loc 1 860 0
 1099 0006 0428     		cmp	r0, #4
 1100 0008 02D9     		bls	.L87
 1101              		.loc 1 860 0 is_stmt 0 discriminator 1
 1102 000a 0020     		movs	r0, #0
 1103              	.LVL79:
 1104 000c FFF7FEFF 		bl	CyHalt
 1105              	.LVL80:
 1106              	.L87:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1107              		.loc 1 871 0 is_stmt 1
 1108 0010 6200     		lsls	r2, r4, #1
 1109 0012 0A4B     		ldr	r3, .L88
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 36


 1110 0014 D05A     		ldrh	r0, [r2, r3]
 1111 0016 00B2     		sxth	r0, r0
 1112 0018 281A     		subs	r0, r5, r0
 1113 001a 00B2     		sxth	r0, r0
 1114              	.LVL81:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1115              		.loc 1 873 0
 1116 001c FFF7FEFF 		bl	__aeabi_i2f
 1117              	.LVL82:
 1118 0020 0749     		ldr	r1, .L88+4
 1119 0022 FFF7FEFF 		bl	__aeabi_fmul
 1120              	.LVL83:
 1121 0026 051C     		adds	r5, r0, #0
 1122 0028 A400     		lsls	r4, r4, #2
 1123              	.LVL84:
 1124 002a 064B     		ldr	r3, .L88+8
 1125 002c E058     		ldr	r0, [r4, r3]
 1126 002e FFF7FEFF 		bl	__aeabi_i2f
 1127              	.LVL85:
 1128 0032 011C     		adds	r1, r0, #0
 1129 0034 281C     		adds	r0, r5, #0
 1130 0036 FFF7FEFF 		bl	__aeabi_fdiv
 1131              	.LVL86:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 1132              		.loc 1 876 0
 1133              		@ sp needed
 1134 003a 70BD     		pop	{r4, r5, r6, pc}
 1135              	.L89:
 1136              		.align	2
 1137              	.L88:
 1138 003c 00000000 		.word	ADC_offset
 1139 0040 00002041 		.word	1092616192
 1140 0044 00000000 		.word	ADC_countsPer10Volt
 1141              		.cfi_endproc
 1142              	.LFE19:
 1143              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1144              		.comm	ADC_countsPer10Volt,20,4
 1145              		.comm	ADC_offset,10,4
 1146              		.global	ADC_initVar
 1147              		.section	.rodata
 1148              		.align	2
 1149              		.set	.LANCHOR0,. + 0
 1150              		.type	ADC_channelsConfig, %object
 1151              		.size	ADC_channelsConfig, 20
 1152              	ADC_channelsConfig:
 1153 0000 00040000 		.word	1024
 1154 0004 00050000 		.word	1280
 1155 0008 00140000 		.word	5120
 1156 000c 00140000 		.word	5120
 1157 0010 00000000 		.word	0
 1158              		.type	ADC_InputsPlacement.4917, %object
 1159              		.size	ADC_InputsPlacement.4917, 5
 1160              	ADC_InputsPlacement.4917:
 1161 0014 01       		.byte	1
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 37


 1162 0015 02       		.byte	2
 1163 0016 13       		.byte	19
 1164 0017 12       		.byte	18
 1165 0018 70       		.byte	112
 1166              		.bss
 1167              		.set	.LANCHOR1,. + 0
 1168              		.type	ADC_initVar, %object
 1169              		.size	ADC_initVar, 1
 1170              	ADC_initVar:
 1171 0000 00       		.space	1
 1172              		.text
 1173              	.Letext0:
 1174              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1175              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1176              		.section	.debug_info,"",%progbits
 1177              	.Ldebug_info0:
 1178 0000 B3050000 		.4byte	0x5b3
 1179 0004 0400     		.2byte	0x4
 1180 0006 00000000 		.4byte	.Ldebug_abbrev0
 1181 000a 04       		.byte	0x4
 1182 000b 01       		.uleb128 0x1
 1183 000c 32000000 		.4byte	.LASF65
 1184 0010 0C       		.byte	0xc
 1185 0011 B0020000 		.4byte	.LASF66
 1186 0015 40030000 		.4byte	.LASF67
 1187 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1188 001d 00000000 		.4byte	0
 1189 0021 00000000 		.4byte	.Ldebug_line0
 1190 0025 02       		.uleb128 0x2
 1191 0026 01       		.byte	0x1
 1192 0027 06       		.byte	0x6
 1193 0028 0A010000 		.4byte	.LASF0
 1194 002c 02       		.uleb128 0x2
 1195 002d 01       		.byte	0x1
 1196 002e 08       		.byte	0x8
 1197 002f 14030000 		.4byte	.LASF1
 1198 0033 02       		.uleb128 0x2
 1199 0034 02       		.byte	0x2
 1200 0035 05       		.byte	0x5
 1201 0036 2D030000 		.4byte	.LASF2
 1202 003a 02       		.uleb128 0x2
 1203 003b 02       		.byte	0x2
 1204 003c 07       		.byte	0x7
 1205 003d EB010000 		.4byte	.LASF3
 1206 0041 02       		.uleb128 0x2
 1207 0042 04       		.byte	0x4
 1208 0043 05       		.byte	0x5
 1209 0044 2D010000 		.4byte	.LASF4
 1210 0048 02       		.uleb128 0x2
 1211 0049 04       		.byte	0x4
 1212 004a 07       		.byte	0x7
 1213 004b BA010000 		.4byte	.LASF5
 1214 004f 02       		.uleb128 0x2
 1215 0050 08       		.byte	0x8
 1216 0051 05       		.byte	0x5
 1217 0052 FC000000 		.4byte	.LASF6
 1218 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 38


 1219 0057 08       		.byte	0x8
 1220 0058 07       		.byte	0x7
 1221 0059 C0000000 		.4byte	.LASF7
 1222 005d 03       		.uleb128 0x3
 1223 005e 04       		.byte	0x4
 1224 005f 05       		.byte	0x5
 1225 0060 696E7400 		.ascii	"int\000"
 1226 0064 02       		.uleb128 0x2
 1227 0065 04       		.byte	0x4
 1228 0066 07       		.byte	0x7
 1229 0067 A6010000 		.4byte	.LASF8
 1230 006b 04       		.uleb128 0x4
 1231 006c 5E010000 		.4byte	.LASF9
 1232 0070 02       		.byte	0x2
 1233 0071 E401     		.2byte	0x1e4
 1234 0073 2C000000 		.4byte	0x2c
 1235 0077 04       		.uleb128 0x4
 1236 0078 00000000 		.4byte	.LASF10
 1237 007c 02       		.byte	0x2
 1238 007d E501     		.2byte	0x1e5
 1239 007f 3A000000 		.4byte	0x3a
 1240 0083 04       		.uleb128 0x4
 1241 0084 75010000 		.4byte	.LASF11
 1242 0088 02       		.byte	0x2
 1243 0089 E601     		.2byte	0x1e6
 1244 008b 48000000 		.4byte	0x48
 1245 008f 04       		.uleb128 0x4
 1246 0090 CC030000 		.4byte	.LASF12
 1247 0094 02       		.byte	0x2
 1248 0095 E801     		.2byte	0x1e8
 1249 0097 33000000 		.4byte	0x33
 1250 009b 04       		.uleb128 0x4
 1251 009c 1D010000 		.4byte	.LASF13
 1252 00a0 02       		.byte	0x2
 1253 00a1 E901     		.2byte	0x1e9
 1254 00a3 41000000 		.4byte	0x41
 1255 00a7 04       		.uleb128 0x4
 1256 00a8 2A020000 		.4byte	.LASF14
 1257 00ac 02       		.byte	0x2
 1258 00ad EA01     		.2byte	0x1ea
 1259 00af B3000000 		.4byte	0xb3
 1260 00b3 02       		.uleb128 0x2
 1261 00b4 04       		.byte	0x4
 1262 00b5 04       		.byte	0x4
 1263 00b6 D9020000 		.4byte	.LASF15
 1264 00ba 02       		.uleb128 0x2
 1265 00bb 08       		.byte	0x8
 1266 00bc 04       		.byte	0x4
 1267 00bd 6E010000 		.4byte	.LASF16
 1268 00c1 04       		.uleb128 0x4
 1269 00c2 89020000 		.4byte	.LASF17
 1270 00c6 02       		.byte	0x2
 1271 00c7 EF01     		.2byte	0x1ef
 1272 00c9 4F000000 		.4byte	0x4f
 1273 00cd 02       		.uleb128 0x2
 1274 00ce 01       		.byte	0x1
 1275 00cf 08       		.byte	0x8
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 39


 1276 00d0 98030000 		.4byte	.LASF18
 1277 00d4 04       		.uleb128 0x4
 1278 00d5 24020000 		.4byte	.LASF19
 1279 00d9 02       		.byte	0x2
 1280 00da 9002     		.2byte	0x290
 1281 00dc E0000000 		.4byte	0xe0
 1282 00e0 05       		.uleb128 0x5
 1283 00e1 83000000 		.4byte	0x83
 1284 00e5 02       		.uleb128 0x2
 1285 00e6 08       		.byte	0x8
 1286 00e7 04       		.byte	0x4
 1287 00e8 44020000 		.4byte	.LASF20
 1288 00ec 02       		.uleb128 0x2
 1289 00ed 04       		.byte	0x4
 1290 00ee 07       		.byte	0x7
 1291 00ef 32020000 		.4byte	.LASF21
 1292 00f3 06       		.uleb128 0x6
 1293 00f4 29000000 		.4byte	.LASF26
 1294 00f8 01       		.byte	0x1
 1295 00f9 5E       		.byte	0x5e
 1296 00fa 00000000 		.4byte	.LFB2
 1297 00fe A8010000 		.4byte	.LFE2-.LFB2
 1298 0102 01       		.uleb128 0x1
 1299 0103 9C       		.byte	0x9c
 1300 0104 6E010000 		.4byte	0x16e
 1301 0108 07       		.uleb128 0x7
 1302 0109 8D030000 		.4byte	.LASF22
 1303 010d 01       		.byte	0x1
 1304 010e 60       		.byte	0x60
 1305 010f 83000000 		.4byte	0x83
 1306 0113 00000000 		.4byte	.LLST0
 1307 0117 07       		.uleb128 0x7
 1308 0118 E1010000 		.4byte	.LASF23
 1309 011c 01       		.byte	0x1
 1310 011d 61       		.byte	0x61
 1311 011e 83000000 		.4byte	0x83
 1312 0122 1F000000 		.4byte	.LLST1
 1313 0126 07       		.uleb128 0x7
 1314 0127 0F000000 		.4byte	.LASF24
 1315 012b 01       		.byte	0x1
 1316 012c 62       		.byte	0x62
 1317 012d 9B000000 		.4byte	0x9b
 1318 0131 00020000 		.4byte	.LLST2
 1319 0135 08       		.uleb128 0x8
 1320 0136 D7000000 		.4byte	.LASF25
 1321 013a 01       		.byte	0x1
 1322 013b 65       		.byte	0x65
 1323 013c 83010000 		.4byte	0x183
 1324 0140 05       		.uleb128 0x5
 1325 0141 03       		.byte	0x3
 1326 0142 14000000 		.4byte	ADC_InputsPlacement.4917
 1327 0146 09       		.uleb128 0x9
 1328 0147 0A000000 		.4byte	.LVL0
 1329 014b 8A050000 		.4byte	0x58a
 1330 014f 5E010000 		.4byte	0x15e
 1331 0153 0A       		.uleb128 0xa
 1332 0154 01       		.uleb128 0x1
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 40


 1333 0155 50       		.byte	0x50
 1334 0156 01       		.uleb128 0x1
 1335 0157 40       		.byte	0x40
 1336 0158 0A       		.uleb128 0xa
 1337 0159 01       		.uleb128 0x1
 1338 015a 51       		.byte	0x51
 1339 015b 01       		.uleb128 0x1
 1340 015c 33       		.byte	0x33
 1341 015d 00       		.byte	0
 1342 015e 0B       		.uleb128 0xb
 1343 015f 12000000 		.4byte	.LVL1
 1344 0163 95050000 		.4byte	0x595
 1345 0167 0A       		.uleb128 0xa
 1346 0168 01       		.uleb128 0x1
 1347 0169 50       		.byte	0x50
 1348 016a 01       		.uleb128 0x1
 1349 016b 40       		.byte	0x40
 1350 016c 00       		.byte	0
 1351 016d 00       		.byte	0
 1352 016e 0C       		.uleb128 0xc
 1353 016f 7E010000 		.4byte	0x17e
 1354 0173 7E010000 		.4byte	0x17e
 1355 0177 0D       		.uleb128 0xd
 1356 0178 EC000000 		.4byte	0xec
 1357 017c 04       		.byte	0x4
 1358 017d 00       		.byte	0
 1359 017e 0E       		.uleb128 0xe
 1360 017f 6B000000 		.4byte	0x6b
 1361 0183 0E       		.uleb128 0xe
 1362 0184 6E010000 		.4byte	0x16e
 1363 0188 0F       		.uleb128 0xf
 1364 0189 C1030000 		.4byte	.LASF27
 1365 018d 01       		.byte	0x1
 1366 018e 4A01     		.2byte	0x14a
 1367 0190 00000000 		.4byte	.LFB3
 1368 0194 30000000 		.4byte	.LFE3-.LFB3
 1369 0198 01       		.uleb128 0x1
 1370 0199 9C       		.byte	0x9c
 1371 019a AE010000 		.4byte	0x1ae
 1372 019e 0B       		.uleb128 0xb
 1373 019f 24000000 		.4byte	.LVL26
 1374 01a3 A0050000 		.4byte	0x5a0
 1375 01a7 0A       		.uleb128 0xa
 1376 01a8 01       		.uleb128 0x1
 1377 01a9 50       		.byte	0x50
 1378 01aa 01       		.uleb128 0x1
 1379 01ab 3A       		.byte	0x3a
 1380 01ac 00       		.byte	0
 1381 01ad 00       		.byte	0
 1382 01ae 06       		.uleb128 0x6
 1383 01af 23010000 		.4byte	.LASF28
 1384 01b3 01       		.byte	0x1
 1385 01b4 3F       		.byte	0x3f
 1386 01b5 00000000 		.4byte	.LFB1
 1387 01b9 20000000 		.4byte	.LFE1-.LFB1
 1388 01bd 01       		.uleb128 0x1
 1389 01be 9C       		.byte	0x9c
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 41


 1390 01bf D6010000 		.4byte	0x1d6
 1391 01c3 10       		.uleb128 0x10
 1392 01c4 0E000000 		.4byte	.LVL27
 1393 01c8 F3000000 		.4byte	0xf3
 1394 01cc 10       		.uleb128 0x10
 1395 01cd 18000000 		.4byte	.LVL28
 1396 01d1 88010000 		.4byte	0x188
 1397 01d5 00       		.byte	0
 1398 01d6 11       		.uleb128 0x11
 1399 01d7 37030000 		.4byte	.LASF29
 1400 01db 01       		.byte	0x1
 1401 01dc 6D01     		.2byte	0x16d
 1402 01de 00000000 		.4byte	.LFB4
 1403 01e2 10000000 		.4byte	.LFE4-.LFB4
 1404 01e6 01       		.uleb128 0x1
 1405 01e7 9C       		.byte	0x9c
 1406 01e8 11       		.uleb128 0x11
 1407 01e9 EB000000 		.4byte	.LASF30
 1408 01ed 01       		.byte	0x1
 1409 01ee 8701     		.2byte	0x187
 1410 01f0 00000000 		.4byte	.LFB5
 1411 01f4 14000000 		.4byte	.LFE5-.LFB5
 1412 01f8 01       		.uleb128 0x1
 1413 01f9 9C       		.byte	0x9c
 1414 01fa 11       		.uleb128 0x11
 1415 01fb 0D020000 		.4byte	.LASF31
 1416 01ff 01       		.byte	0x1
 1417 0200 A001     		.2byte	0x1a0
 1418 0202 00000000 		.4byte	.LFB6
 1419 0206 14000000 		.4byte	.LFE6-.LFB6
 1420 020a 01       		.uleb128 0x1
 1421 020b 9C       		.byte	0x9c
 1422 020c 12       		.uleb128 0x12
 1423 020d 75020000 		.4byte	.LASF33
 1424 0211 01       		.byte	0x1
 1425 0212 C201     		.2byte	0x1c2
 1426 0214 83000000 		.4byte	0x83
 1427 0218 00000000 		.4byte	.LFB7
 1428 021c 4C000000 		.4byte	.LFE7-.LFB7
 1429 0220 01       		.uleb128 0x1
 1430 0221 9C       		.byte	0x9c
 1431 0222 47020000 		.4byte	0x247
 1432 0226 13       		.uleb128 0x13
 1433 0227 8D010000 		.4byte	.LASF35
 1434 022b 01       		.byte	0x1
 1435 022c C201     		.2byte	0x1c2
 1436 022e 83000000 		.4byte	0x83
 1437 0232 13020000 		.4byte	.LLST3
 1438 0236 14       		.uleb128 0x14
 1439 0237 16010000 		.4byte	.LASF32
 1440 023b 01       		.byte	0x1
 1441 023c C401     		.2byte	0x1c4
 1442 023e 83000000 		.4byte	0x83
 1443 0242 47020000 		.4byte	.LLST4
 1444 0246 00       		.byte	0
 1445 0247 12       		.uleb128 0x12
 1446 0248 E7030000 		.4byte	.LASF34
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 42


 1447 024c 01       		.byte	0x1
 1448 024d F801     		.2byte	0x1f8
 1449 024f 8F000000 		.4byte	0x8f
 1450 0253 00000000 		.4byte	.LFB8
 1451 0257 38000000 		.4byte	.LFE8-.LFB8
 1452 025b 01       		.uleb128 0x1
 1453 025c 9C       		.byte	0x9c
 1454 025d 91020000 		.4byte	0x291
 1455 0261 13       		.uleb128 0x13
 1456 0262 93030000 		.4byte	.LASF36
 1457 0266 01       		.byte	0x1
 1458 0267 F801     		.2byte	0x1f8
 1459 0269 83000000 		.4byte	0x83
 1460 026d 7D020000 		.4byte	.LLST5
 1461 0271 14       		.uleb128 0x14
 1462 0272 E0030000 		.4byte	.LASF37
 1463 0276 01       		.byte	0x1
 1464 0277 FA01     		.2byte	0x1fa
 1465 0279 83000000 		.4byte	0x83
 1466 027d C2020000 		.4byte	.LLST6
 1467 0281 0B       		.uleb128 0xb
 1468 0282 0E000000 		.4byte	.LVL38
 1469 0286 AB050000 		.4byte	0x5ab
 1470 028a 0A       		.uleb128 0xa
 1471 028b 01       		.uleb128 0x1
 1472 028c 50       		.byte	0x50
 1473 028d 01       		.uleb128 0x1
 1474 028e 30       		.byte	0x30
 1475 028f 00       		.byte	0
 1476 0290 00       		.byte	0
 1477 0291 0F       		.uleb128 0xf
 1478 0292 A0020000 		.4byte	.LASF38
 1479 0296 01       		.byte	0x1
 1480 0297 2502     		.2byte	0x225
 1481 0299 00000000 		.4byte	.LFB9
 1482 029d 10000000 		.4byte	.LFE9-.LFB9
 1483 02a1 01       		.uleb128 0x1
 1484 02a2 9C       		.byte	0x9c
 1485 02a3 B8020000 		.4byte	0x2b8
 1486 02a7 13       		.uleb128 0x13
 1487 02a8 7C010000 		.4byte	.LASF39
 1488 02ac 01       		.byte	0x1
 1489 02ad 2502     		.2byte	0x225
 1490 02af 83000000 		.4byte	0x83
 1491 02b3 E0020000 		.4byte	.LLST7
 1492 02b7 00       		.byte	0
 1493 02b8 11       		.uleb128 0x11
 1494 02b9 61020000 		.4byte	.LASF40
 1495 02bd 01       		.byte	0x1
 1496 02be 3B02     		.2byte	0x23b
 1497 02c0 00000000 		.4byte	.LFB10
 1498 02c4 14000000 		.4byte	.LFE10-.LFB10
 1499 02c8 01       		.uleb128 0x1
 1500 02c9 9C       		.byte	0x9c
 1501 02ca 0F       		.uleb128 0xf
 1502 02cb FD020000 		.4byte	.LASF41
 1503 02cf 01       		.byte	0x1
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 43


 1504 02d0 5102     		.2byte	0x251
 1505 02d2 00000000 		.4byte	.LFB11
 1506 02d6 1C000000 		.4byte	.LFE11-.LFB11
 1507 02da 01       		.uleb128 0x1
 1508 02db 9C       		.byte	0x9c
 1509 02dc F1020000 		.4byte	0x2f1
 1510 02e0 13       		.uleb128 0x13
 1511 02e1 3B020000 		.4byte	.LASF42
 1512 02e5 01       		.byte	0x1
 1513 02e6 5102     		.2byte	0x251
 1514 02e8 83000000 		.4byte	0x83
 1515 02ec 01030000 		.4byte	.LLST8
 1516 02f0 00       		.byte	0
 1517 02f1 0F       		.uleb128 0xf
 1518 02f2 50020000 		.4byte	.LASF43
 1519 02f6 01       		.byte	0x1
 1520 02f7 6602     		.2byte	0x266
 1521 02f9 00000000 		.4byte	.LFB12
 1522 02fd 18000000 		.4byte	.LFE12-.LFB12
 1523 0301 01       		.uleb128 0x1
 1524 0302 9C       		.byte	0x9c
 1525 0303 18030000 		.4byte	0x318
 1526 0307 13       		.uleb128 0x13
 1527 0308 DF020000 		.4byte	.LASF44
 1528 030c 01       		.byte	0x1
 1529 030d 6602     		.2byte	0x266
 1530 030f 83000000 		.4byte	0x83
 1531 0313 22030000 		.4byte	.LLST9
 1532 0317 00       		.byte	0
 1533 0318 0F       		.uleb128 0xf
 1534 0319 95010000 		.4byte	.LASF45
 1535 031d 01       		.byte	0x1
 1536 031e 7E02     		.2byte	0x27e
 1537 0320 00000000 		.4byte	.LFB13
 1538 0324 10000000 		.4byte	.LFE13-.LFB13
 1539 0328 01       		.uleb128 0x1
 1540 0329 9C       		.byte	0x9c
 1541 032a 3F030000 		.4byte	0x33f
 1542 032e 13       		.uleb128 0x13
 1543 032f 7C010000 		.4byte	.LASF39
 1544 0333 01       		.byte	0x1
 1545 0334 7E02     		.2byte	0x27e
 1546 0336 83000000 		.4byte	0x83
 1547 033a 43030000 		.4byte	.LLST10
 1548 033e 00       		.byte	0
 1549 033f 0F       		.uleb128 0xf
 1550 0340 CC010000 		.4byte	.LASF46
 1551 0344 01       		.byte	0x1
 1552 0345 9502     		.2byte	0x295
 1553 0347 00000000 		.4byte	.LFB14
 1554 034b 10000000 		.4byte	.LFE14-.LFB14
 1555 034f 01       		.uleb128 0x1
 1556 0350 9C       		.byte	0x9c
 1557 0351 66030000 		.4byte	0x366
 1558 0355 13       		.uleb128 0x13
 1559 0356 7C010000 		.4byte	.LASF39
 1560 035a 01       		.byte	0x1
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 44


 1561 035b 9502     		.2byte	0x295
 1562 035d 83000000 		.4byte	0x83
 1563 0361 64030000 		.4byte	.LLST11
 1564 0365 00       		.byte	0
 1565 0366 0F       		.uleb128 0xf
 1566 0367 D2030000 		.4byte	.LASF47
 1567 036b 01       		.byte	0x1
 1568 036c B102     		.2byte	0x2b1
 1569 036e 00000000 		.4byte	.LFB15
 1570 0372 1C000000 		.4byte	.LFE15-.LFB15
 1571 0376 01       		.uleb128 0x1
 1572 0377 9C       		.byte	0x9c
 1573 0378 AC030000 		.4byte	0x3ac
 1574 037c 13       		.uleb128 0x13
 1575 037d 93030000 		.4byte	.LASF36
 1576 0381 01       		.byte	0x1
 1577 0382 B102     		.2byte	0x2b1
 1578 0384 83000000 		.4byte	0x83
 1579 0388 85030000 		.4byte	.LLST12
 1580 038c 13       		.uleb128 0x13
 1581 038d B0030000 		.4byte	.LASF48
 1582 0391 01       		.byte	0x1
 1583 0392 B102     		.2byte	0x2b1
 1584 0394 8F000000 		.4byte	0x8f
 1585 0398 B1030000 		.4byte	.LLST13
 1586 039c 0B       		.uleb128 0xb
 1587 039d 10000000 		.4byte	.LVL56
 1588 03a1 AB050000 		.4byte	0x5ab
 1589 03a5 0A       		.uleb128 0xa
 1590 03a6 01       		.uleb128 0x1
 1591 03a7 50       		.byte	0x50
 1592 03a8 01       		.uleb128 0x1
 1593 03a9 30       		.byte	0x30
 1594 03aa 00       		.byte	0
 1595 03ab 00       		.byte	0
 1596 03ac 0F       		.uleb128 0xf
 1597 03ad CD020000 		.4byte	.LASF49
 1598 03b1 01       		.byte	0x1
 1599 03b2 D302     		.2byte	0x2d3
 1600 03b4 00000000 		.4byte	.LFB16
 1601 03b8 1C000000 		.4byte	.LFE16-.LFB16
 1602 03bc 01       		.uleb128 0x1
 1603 03bd 9C       		.byte	0x9c
 1604 03be F2030000 		.4byte	0x3f2
 1605 03c2 13       		.uleb128 0x13
 1606 03c3 93030000 		.4byte	.LASF36
 1607 03c7 01       		.byte	0x1
 1608 03c8 D302     		.2byte	0x2d3
 1609 03ca 83000000 		.4byte	0x83
 1610 03ce D2030000 		.4byte	.LLST14
 1611 03d2 13       		.uleb128 0x13
 1612 03d3 07000000 		.4byte	.LASF50
 1613 03d7 01       		.byte	0x1
 1614 03d8 D302     		.2byte	0x2d3
 1615 03da 9B000000 		.4byte	0x9b
 1616 03de FE030000 		.4byte	.LLST15
 1617 03e2 0B       		.uleb128 0xb
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 45


 1618 03e3 10000000 		.4byte	.LVL60
 1619 03e7 AB050000 		.4byte	0x5ab
 1620 03eb 0A       		.uleb128 0xa
 1621 03ec 01       		.uleb128 0x1
 1622 03ed 50       		.byte	0x50
 1623 03ee 01       		.uleb128 0x1
 1624 03ef 30       		.byte	0x30
 1625 03f0 00       		.byte	0
 1626 03f1 00       		.byte	0
 1627 03f2 15       		.uleb128 0x15
 1628 03f3 E9020000 		.4byte	.LASF51
 1629 03f7 01       		.byte	0x1
 1630 03f8 F402     		.2byte	0x2f4
 1631 03fa 8F000000 		.4byte	0x8f
 1632 03fe 00000000 		.4byte	.LFB17
 1633 0402 5C000000 		.4byte	.LFE17-.LFB17
 1634 0406 01       		.uleb128 0x1
 1635 0407 9C       		.byte	0x9c
 1636 0408 4A040000 		.4byte	0x44a
 1637 040c 13       		.uleb128 0x13
 1638 040d 93030000 		.4byte	.LASF36
 1639 0411 01       		.byte	0x1
 1640 0412 F402     		.2byte	0x2f4
 1641 0414 83000000 		.4byte	0x83
 1642 0418 2E040000 		.4byte	.LLST16
 1643 041c 13       		.uleb128 0x13
 1644 041d B7030000 		.4byte	.LASF52
 1645 0421 01       		.byte	0x1
 1646 0422 F402     		.2byte	0x2f4
 1647 0424 8F000000 		.4byte	0x8f
 1648 0428 5A040000 		.4byte	.LLST17
 1649 042c 16       		.uleb128 0x16
 1650 042d 1D020000 		.4byte	.LASF53
 1651 0431 01       		.byte	0x1
 1652 0432 F602     		.2byte	0x2f6
 1653 0434 8F000000 		.4byte	0x8f
 1654 0438 01       		.uleb128 0x1
 1655 0439 50       		.byte	0x50
 1656 043a 0B       		.uleb128 0xb
 1657 043b 10000000 		.4byte	.LVL65
 1658 043f AB050000 		.4byte	0x5ab
 1659 0443 0A       		.uleb128 0xa
 1660 0444 01       		.uleb128 0x1
 1661 0445 50       		.byte	0x50
 1662 0446 01       		.uleb128 0x1
 1663 0447 30       		.byte	0x30
 1664 0448 00       		.byte	0
 1665 0449 00       		.byte	0
 1666 044a 15       		.uleb128 0x15
 1667 044b 36010000 		.4byte	.LASF54
 1668 044f 01       		.byte	0x1
 1669 0450 2A03     		.2byte	0x32a
 1670 0452 9B000000 		.4byte	0x9b
 1671 0456 00000000 		.4byte	.LFB18
 1672 045a 40000000 		.4byte	.LFE18-.LFB18
 1673 045e 01       		.uleb128 0x1
 1674 045f 9C       		.byte	0x9c
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 46


 1675 0460 A0040000 		.4byte	0x4a0
 1676 0464 13       		.uleb128 0x13
 1677 0465 93030000 		.4byte	.LASF36
 1678 0469 01       		.byte	0x1
 1679 046a 2A03     		.2byte	0x32a
 1680 046c 83000000 		.4byte	0x83
 1681 0470 86040000 		.4byte	.LLST18
 1682 0474 13       		.uleb128 0x13
 1683 0475 B7030000 		.4byte	.LASF52
 1684 0479 01       		.byte	0x1
 1685 047a 2A03     		.2byte	0x32a
 1686 047c 8F000000 		.4byte	0x8f
 1687 0480 B2040000 		.4byte	.LLST19
 1688 0484 17       		.uleb128 0x17
 1689 0485 B3010000 		.4byte	.LASF68
 1690 0489 01       		.byte	0x1
 1691 048a 2C03     		.2byte	0x32c
 1692 048c C1000000 		.4byte	0xc1
 1693 0490 0B       		.uleb128 0xb
 1694 0491 10000000 		.4byte	.LVL73
 1695 0495 AB050000 		.4byte	0x5ab
 1696 0499 0A       		.uleb128 0xa
 1697 049a 01       		.uleb128 0x1
 1698 049b 50       		.byte	0x50
 1699 049c 01       		.uleb128 0x1
 1700 049d 30       		.byte	0x30
 1701 049e 00       		.byte	0
 1702 049f 00       		.byte	0
 1703 04a0 15       		.uleb128 0x15
 1704 04a1 16000000 		.4byte	.LASF55
 1705 04a5 01       		.byte	0x1
 1706 04a6 5703     		.2byte	0x357
 1707 04a8 A7000000 		.4byte	0xa7
 1708 04ac 00000000 		.4byte	.LFB19
 1709 04b0 48000000 		.4byte	.LFE19-.LFB19
 1710 04b4 01       		.uleb128 0x1
 1711 04b5 9C       		.byte	0x9c
 1712 04b6 F8040000 		.4byte	0x4f8
 1713 04ba 13       		.uleb128 0x13
 1714 04bb 93030000 		.4byte	.LASF36
 1715 04bf 01       		.byte	0x1
 1716 04c0 5703     		.2byte	0x357
 1717 04c2 83000000 		.4byte	0x83
 1718 04c6 DE040000 		.4byte	.LLST20
 1719 04ca 13       		.uleb128 0x13
 1720 04cb B7030000 		.4byte	.LASF52
 1721 04cf 01       		.byte	0x1
 1722 04d0 5703     		.2byte	0x357
 1723 04d2 8F000000 		.4byte	0x8f
 1724 04d6 0A050000 		.4byte	.LLST21
 1725 04da 16       		.uleb128 0x16
 1726 04db DB010000 		.4byte	.LASF56
 1727 04df 01       		.byte	0x1
 1728 04e0 5903     		.2byte	0x359
 1729 04e2 A7000000 		.4byte	0xa7
 1730 04e6 01       		.uleb128 0x1
 1731 04e7 50       		.byte	0x50
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 47


 1732 04e8 0B       		.uleb128 0xb
 1733 04e9 10000000 		.4byte	.LVL80
 1734 04ed AB050000 		.4byte	0x5ab
 1735 04f1 0A       		.uleb128 0xa
 1736 04f2 01       		.uleb128 0x1
 1737 04f3 50       		.byte	0x50
 1738 04f4 01       		.uleb128 0x1
 1739 04f5 30       		.byte	0x30
 1740 04f6 00       		.byte	0
 1741 04f7 00       		.byte	0
 1742 04f8 0C       		.uleb128 0xc
 1743 04f9 08050000 		.4byte	0x508
 1744 04fd 08050000 		.4byte	0x508
 1745 0501 0D       		.uleb128 0xd
 1746 0502 EC000000 		.4byte	0xec
 1747 0506 04       		.byte	0x4
 1748 0507 00       		.byte	0
 1749 0508 0E       		.uleb128 0xe
 1750 0509 83000000 		.4byte	0x83
 1751 050d 08       		.uleb128 0x8
 1752 050e 9D030000 		.4byte	.LASF57
 1753 0512 01       		.byte	0x1
 1754 0513 21       		.byte	0x21
 1755 0514 1E050000 		.4byte	0x51e
 1756 0518 05       		.uleb128 0x5
 1757 0519 03       		.byte	0x3
 1758 051a 00000000 		.4byte	ADC_channelsConfig
 1759 051e 0E       		.uleb128 0xe
 1760 051f F8040000 		.4byte	0x4f8
 1761 0523 18       		.uleb128 0x18
 1762 0524 81010000 		.4byte	.LASF58
 1763 0528 01       		.byte	0x1
 1764 0529 18       		.byte	0x18
 1765 052a 6B000000 		.4byte	0x6b
 1766 052e 05       		.uleb128 0x5
 1767 052f 03       		.byte	0x3
 1768 0530 00000000 		.4byte	ADC_initVar
 1769 0534 0C       		.uleb128 0xc
 1770 0535 44050000 		.4byte	0x544
 1771 0539 44050000 		.4byte	0x544
 1772 053d 0D       		.uleb128 0xd
 1773 053e EC000000 		.4byte	0xec
 1774 0542 04       		.byte	0x4
 1775 0543 00       		.byte	0
 1776 0544 05       		.uleb128 0x5
 1777 0545 8F000000 		.4byte	0x8f
 1778 0549 18       		.uleb128 0x18
 1779 054a 22030000 		.4byte	.LASF59
 1780 054e 01       		.byte	0x1
 1781 054f 19       		.byte	0x19
 1782 0550 5A050000 		.4byte	0x55a
 1783 0554 05       		.uleb128 0x5
 1784 0555 03       		.byte	0x3
 1785 0556 00000000 		.4byte	ADC_offset
 1786 055a 05       		.uleb128 0x5
 1787 055b 34050000 		.4byte	0x534
 1788 055f 0C       		.uleb128 0xc
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 48


 1789 0560 6F050000 		.4byte	0x56f
 1790 0564 6F050000 		.4byte	0x56f
 1791 0568 0D       		.uleb128 0xd
 1792 0569 EC000000 		.4byte	0xec
 1793 056d 04       		.byte	0x4
 1794 056e 00       		.byte	0
 1795 056f 05       		.uleb128 0x5
 1796 0570 9B000000 		.4byte	0x9b
 1797 0574 18       		.uleb128 0x18
 1798 0575 4A010000 		.4byte	.LASF60
 1799 0579 01       		.byte	0x1
 1800 057a 1A       		.byte	0x1a
 1801 057b 85050000 		.4byte	0x585
 1802 057f 05       		.uleb128 0x5
 1803 0580 03       		.byte	0x3
 1804 0581 00000000 		.4byte	ADC_countsPer10Volt
 1805 0585 05       		.uleb128 0x5
 1806 0586 5F050000 		.4byte	0x55f
 1807 058a 19       		.uleb128 0x19
 1808 058b 8F020000 		.4byte	.LASF61
 1809 058f 8F020000 		.4byte	.LASF61
 1810 0593 03       		.byte	0x3
 1811 0594 C0       		.byte	0xc0
 1812 0595 19       		.uleb128 0x19
 1813 0596 FE010000 		.4byte	.LASF62
 1814 059a FE010000 		.4byte	.LASF62
 1815 059e 03       		.byte	0x3
 1816 059f BD       		.byte	0xbd
 1817 05a0 19       		.uleb128 0x19
 1818 05a1 64010000 		.4byte	.LASF63
 1819 05a5 64010000 		.4byte	.LASF63
 1820 05a9 03       		.byte	0x3
 1821 05aa DA       		.byte	0xda
 1822 05ab 19       		.uleb128 0x19
 1823 05ac 0D030000 		.4byte	.LASF64
 1824 05b0 0D030000 		.4byte	.LASF64
 1825 05b4 03       		.byte	0x3
 1826 05b5 E7       		.byte	0xe7
 1827 05b6 00       		.byte	0
 1828              		.section	.debug_abbrev,"",%progbits
 1829              	.Ldebug_abbrev0:
 1830 0000 01       		.uleb128 0x1
 1831 0001 11       		.uleb128 0x11
 1832 0002 01       		.byte	0x1
 1833 0003 25       		.uleb128 0x25
 1834 0004 0E       		.uleb128 0xe
 1835 0005 13       		.uleb128 0x13
 1836 0006 0B       		.uleb128 0xb
 1837 0007 03       		.uleb128 0x3
 1838 0008 0E       		.uleb128 0xe
 1839 0009 1B       		.uleb128 0x1b
 1840 000a 0E       		.uleb128 0xe
 1841 000b 55       		.uleb128 0x55
 1842 000c 17       		.uleb128 0x17
 1843 000d 11       		.uleb128 0x11
 1844 000e 01       		.uleb128 0x1
 1845 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 49


 1846 0010 17       		.uleb128 0x17
 1847 0011 00       		.byte	0
 1848 0012 00       		.byte	0
 1849 0013 02       		.uleb128 0x2
 1850 0014 24       		.uleb128 0x24
 1851 0015 00       		.byte	0
 1852 0016 0B       		.uleb128 0xb
 1853 0017 0B       		.uleb128 0xb
 1854 0018 3E       		.uleb128 0x3e
 1855 0019 0B       		.uleb128 0xb
 1856 001a 03       		.uleb128 0x3
 1857 001b 0E       		.uleb128 0xe
 1858 001c 00       		.byte	0
 1859 001d 00       		.byte	0
 1860 001e 03       		.uleb128 0x3
 1861 001f 24       		.uleb128 0x24
 1862 0020 00       		.byte	0
 1863 0021 0B       		.uleb128 0xb
 1864 0022 0B       		.uleb128 0xb
 1865 0023 3E       		.uleb128 0x3e
 1866 0024 0B       		.uleb128 0xb
 1867 0025 03       		.uleb128 0x3
 1868 0026 08       		.uleb128 0x8
 1869 0027 00       		.byte	0
 1870 0028 00       		.byte	0
 1871 0029 04       		.uleb128 0x4
 1872 002a 16       		.uleb128 0x16
 1873 002b 00       		.byte	0
 1874 002c 03       		.uleb128 0x3
 1875 002d 0E       		.uleb128 0xe
 1876 002e 3A       		.uleb128 0x3a
 1877 002f 0B       		.uleb128 0xb
 1878 0030 3B       		.uleb128 0x3b
 1879 0031 05       		.uleb128 0x5
 1880 0032 49       		.uleb128 0x49
 1881 0033 13       		.uleb128 0x13
 1882 0034 00       		.byte	0
 1883 0035 00       		.byte	0
 1884 0036 05       		.uleb128 0x5
 1885 0037 35       		.uleb128 0x35
 1886 0038 00       		.byte	0
 1887 0039 49       		.uleb128 0x49
 1888 003a 13       		.uleb128 0x13
 1889 003b 00       		.byte	0
 1890 003c 00       		.byte	0
 1891 003d 06       		.uleb128 0x6
 1892 003e 2E       		.uleb128 0x2e
 1893 003f 01       		.byte	0x1
 1894 0040 3F       		.uleb128 0x3f
 1895 0041 19       		.uleb128 0x19
 1896 0042 03       		.uleb128 0x3
 1897 0043 0E       		.uleb128 0xe
 1898 0044 3A       		.uleb128 0x3a
 1899 0045 0B       		.uleb128 0xb
 1900 0046 3B       		.uleb128 0x3b
 1901 0047 0B       		.uleb128 0xb
 1902 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 50


 1903 0049 19       		.uleb128 0x19
 1904 004a 11       		.uleb128 0x11
 1905 004b 01       		.uleb128 0x1
 1906 004c 12       		.uleb128 0x12
 1907 004d 06       		.uleb128 0x6
 1908 004e 40       		.uleb128 0x40
 1909 004f 18       		.uleb128 0x18
 1910 0050 9742     		.uleb128 0x2117
 1911 0052 19       		.uleb128 0x19
 1912 0053 01       		.uleb128 0x1
 1913 0054 13       		.uleb128 0x13
 1914 0055 00       		.byte	0
 1915 0056 00       		.byte	0
 1916 0057 07       		.uleb128 0x7
 1917 0058 34       		.uleb128 0x34
 1918 0059 00       		.byte	0
 1919 005a 03       		.uleb128 0x3
 1920 005b 0E       		.uleb128 0xe
 1921 005c 3A       		.uleb128 0x3a
 1922 005d 0B       		.uleb128 0xb
 1923 005e 3B       		.uleb128 0x3b
 1924 005f 0B       		.uleb128 0xb
 1925 0060 49       		.uleb128 0x49
 1926 0061 13       		.uleb128 0x13
 1927 0062 02       		.uleb128 0x2
 1928 0063 17       		.uleb128 0x17
 1929 0064 00       		.byte	0
 1930 0065 00       		.byte	0
 1931 0066 08       		.uleb128 0x8
 1932 0067 34       		.uleb128 0x34
 1933 0068 00       		.byte	0
 1934 0069 03       		.uleb128 0x3
 1935 006a 0E       		.uleb128 0xe
 1936 006b 3A       		.uleb128 0x3a
 1937 006c 0B       		.uleb128 0xb
 1938 006d 3B       		.uleb128 0x3b
 1939 006e 0B       		.uleb128 0xb
 1940 006f 49       		.uleb128 0x49
 1941 0070 13       		.uleb128 0x13
 1942 0071 02       		.uleb128 0x2
 1943 0072 18       		.uleb128 0x18
 1944 0073 00       		.byte	0
 1945 0074 00       		.byte	0
 1946 0075 09       		.uleb128 0x9
 1947 0076 898201   		.uleb128 0x4109
 1948 0079 01       		.byte	0x1
 1949 007a 11       		.uleb128 0x11
 1950 007b 01       		.uleb128 0x1
 1951 007c 31       		.uleb128 0x31
 1952 007d 13       		.uleb128 0x13
 1953 007e 01       		.uleb128 0x1
 1954 007f 13       		.uleb128 0x13
 1955 0080 00       		.byte	0
 1956 0081 00       		.byte	0
 1957 0082 0A       		.uleb128 0xa
 1958 0083 8A8201   		.uleb128 0x410a
 1959 0086 00       		.byte	0
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 51


 1960 0087 02       		.uleb128 0x2
 1961 0088 18       		.uleb128 0x18
 1962 0089 9142     		.uleb128 0x2111
 1963 008b 18       		.uleb128 0x18
 1964 008c 00       		.byte	0
 1965 008d 00       		.byte	0
 1966 008e 0B       		.uleb128 0xb
 1967 008f 898201   		.uleb128 0x4109
 1968 0092 01       		.byte	0x1
 1969 0093 11       		.uleb128 0x11
 1970 0094 01       		.uleb128 0x1
 1971 0095 31       		.uleb128 0x31
 1972 0096 13       		.uleb128 0x13
 1973 0097 00       		.byte	0
 1974 0098 00       		.byte	0
 1975 0099 0C       		.uleb128 0xc
 1976 009a 01       		.uleb128 0x1
 1977 009b 01       		.byte	0x1
 1978 009c 49       		.uleb128 0x49
 1979 009d 13       		.uleb128 0x13
 1980 009e 01       		.uleb128 0x1
 1981 009f 13       		.uleb128 0x13
 1982 00a0 00       		.byte	0
 1983 00a1 00       		.byte	0
 1984 00a2 0D       		.uleb128 0xd
 1985 00a3 21       		.uleb128 0x21
 1986 00a4 00       		.byte	0
 1987 00a5 49       		.uleb128 0x49
 1988 00a6 13       		.uleb128 0x13
 1989 00a7 2F       		.uleb128 0x2f
 1990 00a8 0B       		.uleb128 0xb
 1991 00a9 00       		.byte	0
 1992 00aa 00       		.byte	0
 1993 00ab 0E       		.uleb128 0xe
 1994 00ac 26       		.uleb128 0x26
 1995 00ad 00       		.byte	0
 1996 00ae 49       		.uleb128 0x49
 1997 00af 13       		.uleb128 0x13
 1998 00b0 00       		.byte	0
 1999 00b1 00       		.byte	0
 2000 00b2 0F       		.uleb128 0xf
 2001 00b3 2E       		.uleb128 0x2e
 2002 00b4 01       		.byte	0x1
 2003 00b5 3F       		.uleb128 0x3f
 2004 00b6 19       		.uleb128 0x19
 2005 00b7 03       		.uleb128 0x3
 2006 00b8 0E       		.uleb128 0xe
 2007 00b9 3A       		.uleb128 0x3a
 2008 00ba 0B       		.uleb128 0xb
 2009 00bb 3B       		.uleb128 0x3b
 2010 00bc 05       		.uleb128 0x5
 2011 00bd 27       		.uleb128 0x27
 2012 00be 19       		.uleb128 0x19
 2013 00bf 11       		.uleb128 0x11
 2014 00c0 01       		.uleb128 0x1
 2015 00c1 12       		.uleb128 0x12
 2016 00c2 06       		.uleb128 0x6
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 52


 2017 00c3 40       		.uleb128 0x40
 2018 00c4 18       		.uleb128 0x18
 2019 00c5 9742     		.uleb128 0x2117
 2020 00c7 19       		.uleb128 0x19
 2021 00c8 01       		.uleb128 0x1
 2022 00c9 13       		.uleb128 0x13
 2023 00ca 00       		.byte	0
 2024 00cb 00       		.byte	0
 2025 00cc 10       		.uleb128 0x10
 2026 00cd 898201   		.uleb128 0x4109
 2027 00d0 00       		.byte	0
 2028 00d1 11       		.uleb128 0x11
 2029 00d2 01       		.uleb128 0x1
 2030 00d3 31       		.uleb128 0x31
 2031 00d4 13       		.uleb128 0x13
 2032 00d5 00       		.byte	0
 2033 00d6 00       		.byte	0
 2034 00d7 11       		.uleb128 0x11
 2035 00d8 2E       		.uleb128 0x2e
 2036 00d9 00       		.byte	0
 2037 00da 3F       		.uleb128 0x3f
 2038 00db 19       		.uleb128 0x19
 2039 00dc 03       		.uleb128 0x3
 2040 00dd 0E       		.uleb128 0xe
 2041 00de 3A       		.uleb128 0x3a
 2042 00df 0B       		.uleb128 0xb
 2043 00e0 3B       		.uleb128 0x3b
 2044 00e1 05       		.uleb128 0x5
 2045 00e2 27       		.uleb128 0x27
 2046 00e3 19       		.uleb128 0x19
 2047 00e4 11       		.uleb128 0x11
 2048 00e5 01       		.uleb128 0x1
 2049 00e6 12       		.uleb128 0x12
 2050 00e7 06       		.uleb128 0x6
 2051 00e8 40       		.uleb128 0x40
 2052 00e9 18       		.uleb128 0x18
 2053 00ea 9742     		.uleb128 0x2117
 2054 00ec 19       		.uleb128 0x19
 2055 00ed 00       		.byte	0
 2056 00ee 00       		.byte	0
 2057 00ef 12       		.uleb128 0x12
 2058 00f0 2E       		.uleb128 0x2e
 2059 00f1 01       		.byte	0x1
 2060 00f2 3F       		.uleb128 0x3f
 2061 00f3 19       		.uleb128 0x19
 2062 00f4 03       		.uleb128 0x3
 2063 00f5 0E       		.uleb128 0xe
 2064 00f6 3A       		.uleb128 0x3a
 2065 00f7 0B       		.uleb128 0xb
 2066 00f8 3B       		.uleb128 0x3b
 2067 00f9 05       		.uleb128 0x5
 2068 00fa 27       		.uleb128 0x27
 2069 00fb 19       		.uleb128 0x19
 2070 00fc 49       		.uleb128 0x49
 2071 00fd 13       		.uleb128 0x13
 2072 00fe 11       		.uleb128 0x11
 2073 00ff 01       		.uleb128 0x1
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 53


 2074 0100 12       		.uleb128 0x12
 2075 0101 06       		.uleb128 0x6
 2076 0102 40       		.uleb128 0x40
 2077 0103 18       		.uleb128 0x18
 2078 0104 9742     		.uleb128 0x2117
 2079 0106 19       		.uleb128 0x19
 2080 0107 01       		.uleb128 0x1
 2081 0108 13       		.uleb128 0x13
 2082 0109 00       		.byte	0
 2083 010a 00       		.byte	0
 2084 010b 13       		.uleb128 0x13
 2085 010c 05       		.uleb128 0x5
 2086 010d 00       		.byte	0
 2087 010e 03       		.uleb128 0x3
 2088 010f 0E       		.uleb128 0xe
 2089 0110 3A       		.uleb128 0x3a
 2090 0111 0B       		.uleb128 0xb
 2091 0112 3B       		.uleb128 0x3b
 2092 0113 05       		.uleb128 0x5
 2093 0114 49       		.uleb128 0x49
 2094 0115 13       		.uleb128 0x13
 2095 0116 02       		.uleb128 0x2
 2096 0117 17       		.uleb128 0x17
 2097 0118 00       		.byte	0
 2098 0119 00       		.byte	0
 2099 011a 14       		.uleb128 0x14
 2100 011b 34       		.uleb128 0x34
 2101 011c 00       		.byte	0
 2102 011d 03       		.uleb128 0x3
 2103 011e 0E       		.uleb128 0xe
 2104 011f 3A       		.uleb128 0x3a
 2105 0120 0B       		.uleb128 0xb
 2106 0121 3B       		.uleb128 0x3b
 2107 0122 05       		.uleb128 0x5
 2108 0123 49       		.uleb128 0x49
 2109 0124 13       		.uleb128 0x13
 2110 0125 02       		.uleb128 0x2
 2111 0126 17       		.uleb128 0x17
 2112 0127 00       		.byte	0
 2113 0128 00       		.byte	0
 2114 0129 15       		.uleb128 0x15
 2115 012a 2E       		.uleb128 0x2e
 2116 012b 01       		.byte	0x1
 2117 012c 3F       		.uleb128 0x3f
 2118 012d 19       		.uleb128 0x19
 2119 012e 03       		.uleb128 0x3
 2120 012f 0E       		.uleb128 0xe
 2121 0130 3A       		.uleb128 0x3a
 2122 0131 0B       		.uleb128 0xb
 2123 0132 3B       		.uleb128 0x3b
 2124 0133 05       		.uleb128 0x5
 2125 0134 27       		.uleb128 0x27
 2126 0135 19       		.uleb128 0x19
 2127 0136 49       		.uleb128 0x49
 2128 0137 13       		.uleb128 0x13
 2129 0138 11       		.uleb128 0x11
 2130 0139 01       		.uleb128 0x1
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 54


 2131 013a 12       		.uleb128 0x12
 2132 013b 06       		.uleb128 0x6
 2133 013c 40       		.uleb128 0x40
 2134 013d 18       		.uleb128 0x18
 2135 013e 9642     		.uleb128 0x2116
 2136 0140 19       		.uleb128 0x19
 2137 0141 01       		.uleb128 0x1
 2138 0142 13       		.uleb128 0x13
 2139 0143 00       		.byte	0
 2140 0144 00       		.byte	0
 2141 0145 16       		.uleb128 0x16
 2142 0146 34       		.uleb128 0x34
 2143 0147 00       		.byte	0
 2144 0148 03       		.uleb128 0x3
 2145 0149 0E       		.uleb128 0xe
 2146 014a 3A       		.uleb128 0x3a
 2147 014b 0B       		.uleb128 0xb
 2148 014c 3B       		.uleb128 0x3b
 2149 014d 05       		.uleb128 0x5
 2150 014e 49       		.uleb128 0x49
 2151 014f 13       		.uleb128 0x13
 2152 0150 02       		.uleb128 0x2
 2153 0151 18       		.uleb128 0x18
 2154 0152 00       		.byte	0
 2155 0153 00       		.byte	0
 2156 0154 17       		.uleb128 0x17
 2157 0155 34       		.uleb128 0x34
 2158 0156 00       		.byte	0
 2159 0157 03       		.uleb128 0x3
 2160 0158 0E       		.uleb128 0xe
 2161 0159 3A       		.uleb128 0x3a
 2162 015a 0B       		.uleb128 0xb
 2163 015b 3B       		.uleb128 0x3b
 2164 015c 05       		.uleb128 0x5
 2165 015d 49       		.uleb128 0x49
 2166 015e 13       		.uleb128 0x13
 2167 015f 00       		.byte	0
 2168 0160 00       		.byte	0
 2169 0161 18       		.uleb128 0x18
 2170 0162 34       		.uleb128 0x34
 2171 0163 00       		.byte	0
 2172 0164 03       		.uleb128 0x3
 2173 0165 0E       		.uleb128 0xe
 2174 0166 3A       		.uleb128 0x3a
 2175 0167 0B       		.uleb128 0xb
 2176 0168 3B       		.uleb128 0x3b
 2177 0169 0B       		.uleb128 0xb
 2178 016a 49       		.uleb128 0x49
 2179 016b 13       		.uleb128 0x13
 2180 016c 3F       		.uleb128 0x3f
 2181 016d 19       		.uleb128 0x19
 2182 016e 02       		.uleb128 0x2
 2183 016f 18       		.uleb128 0x18
 2184 0170 00       		.byte	0
 2185 0171 00       		.byte	0
 2186 0172 19       		.uleb128 0x19
 2187 0173 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 55


 2188 0174 00       		.byte	0
 2189 0175 3F       		.uleb128 0x3f
 2190 0176 19       		.uleb128 0x19
 2191 0177 3C       		.uleb128 0x3c
 2192 0178 19       		.uleb128 0x19
 2193 0179 6E       		.uleb128 0x6e
 2194 017a 0E       		.uleb128 0xe
 2195 017b 03       		.uleb128 0x3
 2196 017c 0E       		.uleb128 0xe
 2197 017d 3A       		.uleb128 0x3a
 2198 017e 0B       		.uleb128 0xb
 2199 017f 3B       		.uleb128 0x3b
 2200 0180 0B       		.uleb128 0xb
 2201 0181 00       		.byte	0
 2202 0182 00       		.byte	0
 2203 0183 00       		.byte	0
 2204              		.section	.debug_loc,"",%progbits
 2205              	.Ldebug_loc0:
 2206              	.LLST0:
 2207 0000 68000000 		.4byte	.LVL5
 2208 0004 6C000000 		.4byte	.LVL6
 2209 0008 0200     		.2byte	0x2
 2210 000a 30       		.byte	0x30
 2211 000b 9F       		.byte	0x9f
 2212 000c 6C000000 		.4byte	.LVL6
 2213 0010 A8010000 		.4byte	.LFE2
 2214 0014 0100     		.2byte	0x1
 2215 0016 52       		.byte	0x52
 2216 0017 00000000 		.4byte	0
 2217 001b 00000000 		.4byte	0
 2218              	.LLST1:
 2219 001f 5E000000 		.4byte	.LVL2
 2220 0023 62000000 		.4byte	.LVL3
 2221 0027 0100     		.2byte	0x1
 2222 0029 52       		.byte	0x52
 2223 002a 62000000 		.4byte	.LVL3
 2224 002e 6C000000 		.4byte	.LVL6
 2225 0032 0100     		.2byte	0x1
 2226 0034 53       		.byte	0x53
 2227 0035 78000000 		.4byte	.LVL7
 2228 0039 90000000 		.4byte	.LVL9
 2229 003d 0100     		.2byte	0x1
 2230 003f 53       		.byte	0x53
 2231 0040 90000000 		.4byte	.LVL9
 2232 0044 94000000 		.4byte	.LVL10
 2233 0048 0200     		.2byte	0x2
 2234 004a 71       		.byte	0x71
 2235 004b 00       		.sleb128 0
 2236 004c 94000000 		.4byte	.LVL10
 2237 0050 A0000000 		.4byte	.LVL11
 2238 0054 0700     		.2byte	0x7
 2239 0056 72       		.byte	0x72
 2240 0057 00       		.sleb128 0
 2241 0058 32       		.byte	0x32
 2242 0059 24       		.byte	0x24
 2243 005a 74       		.byte	0x74
 2244 005b 00       		.sleb128 0
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 56


 2245 005c 22       		.byte	0x22
 2246 005d A0000000 		.4byte	.LVL11
 2247 0061 A4000000 		.4byte	.LVL12
 2248 0065 1E00     		.2byte	0x1e
 2249 0067 72       		.byte	0x72
 2250 0068 00       		.sleb128 0
 2251 0069 32       		.byte	0x32
 2252 006a 24       		.byte	0x24
 2253 006b 03       		.byte	0x3
 2254 006c 00000000 		.4byte	.LANCHOR0
 2255 0070 22       		.byte	0x22
 2256 0071 06       		.byte	0x6
 2257 0072 0A       		.byte	0xa
 2258 0073 0037     		.2byte	0x3700
 2259 0075 1A       		.byte	0x1a
 2260 0076 72       		.byte	0x72
 2261 0077 00       		.sleb128 0
 2262 0078 03       		.byte	0x3
 2263 0079 14000000 		.4byte	.LANCHOR0+20
 2264 007d 22       		.byte	0x22
 2265 007e 94       		.byte	0x94
 2266 007f 01       		.byte	0x1
 2267 0080 08       		.byte	0x8
 2268 0081 FF       		.byte	0xff
 2269 0082 1A       		.byte	0x1a
 2270 0083 21       		.byte	0x21
 2271 0084 9F       		.byte	0x9f
 2272 0085 A4000000 		.4byte	.LVL12
 2273 0089 AE000000 		.4byte	.LVL13
 2274 008d 1A00     		.2byte	0x1a
 2275 008f 72       		.byte	0x72
 2276 0090 00       		.sleb128 0
 2277 0091 32       		.byte	0x32
 2278 0092 24       		.byte	0x24
 2279 0093 71       		.byte	0x71
 2280 0094 00       		.sleb128 0
 2281 0095 22       		.byte	0x22
 2282 0096 06       		.byte	0x6
 2283 0097 0A       		.byte	0xa
 2284 0098 0037     		.2byte	0x3700
 2285 009a 1A       		.byte	0x1a
 2286 009b 71       		.byte	0x71
 2287 009c 00       		.sleb128 0
 2288 009d 72       		.byte	0x72
 2289 009e 00       		.sleb128 0
 2290 009f 22       		.byte	0x22
 2291 00a0 23       		.byte	0x23
 2292 00a1 14       		.uleb128 0x14
 2293 00a2 94       		.byte	0x94
 2294 00a3 01       		.byte	0x1
 2295 00a4 08       		.byte	0x8
 2296 00a5 FF       		.byte	0xff
 2297 00a6 1A       		.byte	0x1a
 2298 00a7 21       		.byte	0x21
 2299 00a8 9F       		.byte	0x9f
 2300 00a9 AE000000 		.4byte	.LVL13
 2301 00ad BC000000 		.4byte	.LVL14
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 57


 2302 00b1 1E00     		.2byte	0x1e
 2303 00b3 72       		.byte	0x72
 2304 00b4 00       		.sleb128 0
 2305 00b5 32       		.byte	0x32
 2306 00b6 24       		.byte	0x24
 2307 00b7 03       		.byte	0x3
 2308 00b8 00000000 		.4byte	.LANCHOR0
 2309 00bc 22       		.byte	0x22
 2310 00bd 06       		.byte	0x6
 2311 00be 0A       		.byte	0xa
 2312 00bf 0037     		.2byte	0x3700
 2313 00c1 1A       		.byte	0x1a
 2314 00c2 72       		.byte	0x72
 2315 00c3 00       		.sleb128 0
 2316 00c4 03       		.byte	0x3
 2317 00c5 14000000 		.4byte	.LANCHOR0+20
 2318 00c9 22       		.byte	0x22
 2319 00ca 94       		.byte	0x94
 2320 00cb 01       		.byte	0x1
 2321 00cc 08       		.byte	0x8
 2322 00cd FF       		.byte	0xff
 2323 00ce 1A       		.byte	0x1a
 2324 00cf 21       		.byte	0x21
 2325 00d0 9F       		.byte	0x9f
 2326 00d1 BC000000 		.4byte	.LVL14
 2327 00d5 C2000000 		.4byte	.LVL15
 2328 00d9 0100     		.2byte	0x1
 2329 00db 53       		.byte	0x53
 2330 00dc C2000000 		.4byte	.LVL15
 2331 00e0 CA000000 		.4byte	.LVL16
 2332 00e4 1500     		.2byte	0x15
 2333 00e6 70       		.byte	0x70
 2334 00e7 00       		.sleb128 0
 2335 00e8 0A       		.byte	0xa
 2336 00e9 0037     		.2byte	0x3700
 2337 00eb 1A       		.byte	0x1a
 2338 00ec 72       		.byte	0x72
 2339 00ed 00       		.sleb128 0
 2340 00ee 03       		.byte	0x3
 2341 00ef 14000000 		.4byte	.LANCHOR0+20
 2342 00f3 22       		.byte	0x22
 2343 00f4 94       		.byte	0x94
 2344 00f5 01       		.byte	0x1
 2345 00f6 08       		.byte	0x8
 2346 00f7 FF       		.byte	0xff
 2347 00f8 1A       		.byte	0x1a
 2348 00f9 21       		.byte	0x21
 2349 00fa 9F       		.byte	0x9f
 2350 00fb CA000000 		.4byte	.LVL16
 2351 00ff D2000000 		.4byte	.LVL17
 2352 0103 1400     		.2byte	0x14
 2353 0105 70       		.byte	0x70
 2354 0106 00       		.sleb128 0
 2355 0107 0A       		.byte	0xa
 2356 0108 0037     		.2byte	0x3700
 2357 010a 1A       		.byte	0x1a
 2358 010b 71       		.byte	0x71
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 58


 2359 010c 00       		.sleb128 0
 2360 010d 72       		.byte	0x72
 2361 010e 00       		.sleb128 0
 2362 010f 22       		.byte	0x22
 2363 0110 23       		.byte	0x23
 2364 0111 14       		.uleb128 0x14
 2365 0112 94       		.byte	0x94
 2366 0113 01       		.byte	0x1
 2367 0114 08       		.byte	0x8
 2368 0115 FF       		.byte	0xff
 2369 0116 1A       		.byte	0x1a
 2370 0117 21       		.byte	0x21
 2371 0118 9F       		.byte	0x9f
 2372 0119 D2000000 		.4byte	.LVL17
 2373 011d D4000000 		.4byte	.LVL18
 2374 0121 1500     		.2byte	0x15
 2375 0123 70       		.byte	0x70
 2376 0124 00       		.sleb128 0
 2377 0125 0A       		.byte	0xa
 2378 0126 0037     		.2byte	0x3700
 2379 0128 1A       		.byte	0x1a
 2380 0129 72       		.byte	0x72
 2381 012a 00       		.sleb128 0
 2382 012b 03       		.byte	0x3
 2383 012c 14000000 		.4byte	.LANCHOR0+20
 2384 0130 22       		.byte	0x22
 2385 0131 94       		.byte	0x94
 2386 0132 01       		.byte	0x1
 2387 0133 08       		.byte	0x8
 2388 0134 FF       		.byte	0xff
 2389 0135 1A       		.byte	0x1a
 2390 0136 21       		.byte	0x21
 2391 0137 9F       		.byte	0x9f
 2392 0138 D4000000 		.4byte	.LVL18
 2393 013c DE000000 		.4byte	.LVL19
 2394 0140 1E00     		.2byte	0x1e
 2395 0142 72       		.byte	0x72
 2396 0143 00       		.sleb128 0
 2397 0144 32       		.byte	0x32
 2398 0145 24       		.byte	0x24
 2399 0146 03       		.byte	0x3
 2400 0147 00000000 		.4byte	.LANCHOR0
 2401 014b 22       		.byte	0x22
 2402 014c 06       		.byte	0x6
 2403 014d 0A       		.byte	0xa
 2404 014e 0037     		.2byte	0x3700
 2405 0150 1A       		.byte	0x1a
 2406 0151 72       		.byte	0x72
 2407 0152 00       		.sleb128 0
 2408 0153 03       		.byte	0x3
 2409 0154 14000000 		.4byte	.LANCHOR0+20
 2410 0158 22       		.byte	0x22
 2411 0159 94       		.byte	0x94
 2412 015a 01       		.byte	0x1
 2413 015b 08       		.byte	0x8
 2414 015c FF       		.byte	0xff
 2415 015d 1A       		.byte	0x1a
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 59


 2416 015e 21       		.byte	0x21
 2417 015f 9F       		.byte	0x9f
 2418 0160 DE000000 		.4byte	.LVL19
 2419 0164 E6000000 		.4byte	.LVL20
 2420 0168 1A00     		.2byte	0x1a
 2421 016a 72       		.byte	0x72
 2422 016b 00       		.sleb128 0
 2423 016c 32       		.byte	0x32
 2424 016d 24       		.byte	0x24
 2425 016e 71       		.byte	0x71
 2426 016f 00       		.sleb128 0
 2427 0170 22       		.byte	0x22
 2428 0171 06       		.byte	0x6
 2429 0172 0A       		.byte	0xa
 2430 0173 0037     		.2byte	0x3700
 2431 0175 1A       		.byte	0x1a
 2432 0176 71       		.byte	0x71
 2433 0177 00       		.sleb128 0
 2434 0178 72       		.byte	0x72
 2435 0179 00       		.sleb128 0
 2436 017a 22       		.byte	0x22
 2437 017b 23       		.byte	0x23
 2438 017c 14       		.uleb128 0x14
 2439 017d 94       		.byte	0x94
 2440 017e 01       		.byte	0x1
 2441 017f 08       		.byte	0x8
 2442 0180 FF       		.byte	0xff
 2443 0181 1A       		.byte	0x1a
 2444 0182 21       		.byte	0x21
 2445 0183 9F       		.byte	0x9f
 2446 0184 E6000000 		.4byte	.LVL20
 2447 0188 F2000000 		.4byte	.LVL21
 2448 018c 1E00     		.2byte	0x1e
 2449 018e 72       		.byte	0x72
 2450 018f 00       		.sleb128 0
 2451 0190 32       		.byte	0x32
 2452 0191 24       		.byte	0x24
 2453 0192 03       		.byte	0x3
 2454 0193 00000000 		.4byte	.LANCHOR0
 2455 0197 22       		.byte	0x22
 2456 0198 06       		.byte	0x6
 2457 0199 0A       		.byte	0xa
 2458 019a 0037     		.2byte	0x3700
 2459 019c 1A       		.byte	0x1a
 2460 019d 72       		.byte	0x72
 2461 019e 00       		.sleb128 0
 2462 019f 03       		.byte	0x3
 2463 01a0 14000000 		.4byte	.LANCHOR0+20
 2464 01a4 22       		.byte	0x22
 2465 01a5 94       		.byte	0x94
 2466 01a6 01       		.byte	0x1
 2467 01a7 08       		.byte	0x8
 2468 01a8 FF       		.byte	0xff
 2469 01a9 1A       		.byte	0x1a
 2470 01aa 21       		.byte	0x21
 2471 01ab 9F       		.byte	0x9f
 2472 01ac F2000000 		.4byte	.LVL21
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 60


 2473 01b0 F4000000 		.4byte	.LVL22
 2474 01b4 1A00     		.2byte	0x1a
 2475 01b6 72       		.byte	0x72
 2476 01b7 00       		.sleb128 0
 2477 01b8 32       		.byte	0x32
 2478 01b9 24       		.byte	0x24
 2479 01ba 71       		.byte	0x71
 2480 01bb 00       		.sleb128 0
 2481 01bc 22       		.byte	0x22
 2482 01bd 06       		.byte	0x6
 2483 01be 0A       		.byte	0xa
 2484 01bf 0037     		.2byte	0x3700
 2485 01c1 1A       		.byte	0x1a
 2486 01c2 71       		.byte	0x71
 2487 01c3 00       		.sleb128 0
 2488 01c4 72       		.byte	0x72
 2489 01c5 00       		.sleb128 0
 2490 01c6 22       		.byte	0x22
 2491 01c7 23       		.byte	0x23
 2492 01c8 14       		.uleb128 0x14
 2493 01c9 94       		.byte	0x94
 2494 01ca 01       		.byte	0x1
 2495 01cb 08       		.byte	0x8
 2496 01cc FF       		.byte	0xff
 2497 01cd 1A       		.byte	0x1a
 2498 01ce 21       		.byte	0x21
 2499 01cf 9F       		.byte	0x9f
 2500 01d0 F4000000 		.4byte	.LVL22
 2501 01d4 38010000 		.4byte	.LVL25
 2502 01d8 1E00     		.2byte	0x1e
 2503 01da 72       		.byte	0x72
 2504 01db 00       		.sleb128 0
 2505 01dc 32       		.byte	0x32
 2506 01dd 24       		.byte	0x24
 2507 01de 03       		.byte	0x3
 2508 01df 00000000 		.4byte	.LANCHOR0
 2509 01e3 22       		.byte	0x22
 2510 01e4 06       		.byte	0x6
 2511 01e5 0A       		.byte	0xa
 2512 01e6 0037     		.2byte	0x3700
 2513 01e8 1A       		.byte	0x1a
 2514 01e9 72       		.byte	0x72
 2515 01ea 00       		.sleb128 0
 2516 01eb 03       		.byte	0x3
 2517 01ec 14000000 		.4byte	.LANCHOR0+20
 2518 01f0 22       		.byte	0x22
 2519 01f1 94       		.byte	0x94
 2520 01f2 01       		.byte	0x1
 2521 01f3 08       		.byte	0x8
 2522 01f4 FF       		.byte	0xff
 2523 01f5 1A       		.byte	0x1a
 2524 01f6 21       		.byte	0x21
 2525 01f7 9F       		.byte	0x9f
 2526 01f8 00000000 		.4byte	0
 2527 01fc 00000000 		.4byte	0
 2528              	.LLST2:
 2529 0200 02010000 		.4byte	.LVL23
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 61


 2530 0204 32010000 		.4byte	.LVL24
 2531 0208 0100     		.2byte	0x1
 2532 020a 50       		.byte	0x50
 2533 020b 00000000 		.4byte	0
 2534 020f 00000000 		.4byte	0
 2535              	.LLST3:
 2536 0213 00000000 		.4byte	.LVL29
 2537 0217 06000000 		.4byte	.LVL31
 2538 021b 0100     		.2byte	0x1
 2539 021d 50       		.byte	0x50
 2540 021e 06000000 		.4byte	.LVL31
 2541 0222 20000000 		.4byte	.LVL33
 2542 0226 0100     		.2byte	0x1
 2543 0228 51       		.byte	0x51
 2544 0229 20000000 		.4byte	.LVL33
 2545 022d 22000000 		.4byte	.LVL34
 2546 0231 0100     		.2byte	0x1
 2547 0233 50       		.byte	0x50
 2548 0234 22000000 		.4byte	.LVL34
 2549 0238 4C000000 		.4byte	.LFE7
 2550 023c 0100     		.2byte	0x1
 2551 023e 51       		.byte	0x51
 2552 023f 00000000 		.4byte	0
 2553 0243 00000000 		.4byte	0
 2554              	.LLST4:
 2555 0247 02000000 		.4byte	.LVL30
 2556 024b 06000000 		.4byte	.LVL31
 2557 024f 0200     		.2byte	0x2
 2558 0251 30       		.byte	0x30
 2559 0252 9F       		.byte	0x9f
 2560 0253 0E000000 		.4byte	.LVL32
 2561 0257 20000000 		.4byte	.LVL33
 2562 025b 0100     		.2byte	0x1
 2563 025d 50       		.byte	0x50
 2564 025e 20000000 		.4byte	.LVL33
 2565 0262 22000000 		.4byte	.LVL34
 2566 0266 0200     		.2byte	0x2
 2567 0268 30       		.byte	0x30
 2568 0269 9F       		.byte	0x9f
 2569 026a 22000000 		.4byte	.LVL34
 2570 026e 4C000000 		.4byte	.LFE7
 2571 0272 0100     		.2byte	0x1
 2572 0274 50       		.byte	0x50
 2573 0275 00000000 		.4byte	0
 2574 0279 00000000 		.4byte	0
 2575              	.LLST5:
 2576 027d 00000000 		.4byte	.LVL36
 2577 0281 0A000000 		.4byte	.LVL37
 2578 0285 0100     		.2byte	0x1
 2579 0287 50       		.byte	0x50
 2580 0288 0A000000 		.4byte	.LVL37
 2581 028c 14000000 		.4byte	.LVL39
 2582 0290 0100     		.2byte	0x1
 2583 0292 54       		.byte	0x54
 2584 0293 14000000 		.4byte	.LVL39
 2585 0297 22000000 		.4byte	.LVL41
 2586 029b 0400     		.2byte	0x4
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 62


 2587 029d F3       		.byte	0xf3
 2588 029e 01       		.uleb128 0x1
 2589 029f 50       		.byte	0x50
 2590 02a0 9F       		.byte	0x9f
 2591 02a1 22000000 		.4byte	.LVL41
 2592 02a5 2A000000 		.4byte	.LVL42
 2593 02a9 0100     		.2byte	0x1
 2594 02ab 54       		.byte	0x54
 2595 02ac 2A000000 		.4byte	.LVL42
 2596 02b0 38000000 		.4byte	.LFE8
 2597 02b4 0400     		.2byte	0x4
 2598 02b6 F3       		.byte	0xf3
 2599 02b7 01       		.uleb128 0x1
 2600 02b8 50       		.byte	0x50
 2601 02b9 9F       		.byte	0x9f
 2602 02ba 00000000 		.4byte	0
 2603 02be 00000000 		.4byte	0
 2604              	.LLST6:
 2605 02c2 20000000 		.4byte	.LVL40
 2606 02c6 22000000 		.4byte	.LVL41
 2607 02ca 0100     		.2byte	0x1
 2608 02cc 50       		.byte	0x50
 2609 02cd 2A000000 		.4byte	.LVL42
 2610 02d1 2C000000 		.4byte	.LVL43
 2611 02d5 0100     		.2byte	0x1
 2612 02d7 50       		.byte	0x50
 2613 02d8 00000000 		.4byte	0
 2614 02dc 00000000 		.4byte	0
 2615              	.LLST7:
 2616 02e0 00000000 		.4byte	.LVL44
 2617 02e4 04000000 		.4byte	.LVL45
 2618 02e8 0100     		.2byte	0x1
 2619 02ea 50       		.byte	0x50
 2620 02eb 04000000 		.4byte	.LVL45
 2621 02ef 10000000 		.4byte	.LFE9
 2622 02f3 0400     		.2byte	0x4
 2623 02f5 F3       		.byte	0xf3
 2624 02f6 01       		.uleb128 0x1
 2625 02f7 50       		.byte	0x50
 2626 02f8 9F       		.byte	0x9f
 2627 02f9 00000000 		.4byte	0
 2628 02fd 00000000 		.4byte	0
 2629              	.LLST8:
 2630 0301 00000000 		.4byte	.LVL46
 2631 0305 0E000000 		.4byte	.LVL47
 2632 0309 0100     		.2byte	0x1
 2633 030b 50       		.byte	0x50
 2634 030c 0E000000 		.4byte	.LVL47
 2635 0310 1C000000 		.4byte	.LFE11
 2636 0314 0400     		.2byte	0x4
 2637 0316 F3       		.byte	0xf3
 2638 0317 01       		.uleb128 0x1
 2639 0318 50       		.byte	0x50
 2640 0319 9F       		.byte	0x9f
 2641 031a 00000000 		.4byte	0
 2642 031e 00000000 		.4byte	0
 2643              	.LLST9:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 63


 2644 0322 00000000 		.4byte	.LVL48
 2645 0326 0E000000 		.4byte	.LVL49
 2646 032a 0100     		.2byte	0x1
 2647 032c 50       		.byte	0x50
 2648 032d 0E000000 		.4byte	.LVL49
 2649 0331 18000000 		.4byte	.LFE12
 2650 0335 0400     		.2byte	0x4
 2651 0337 F3       		.byte	0xf3
 2652 0338 01       		.uleb128 0x1
 2653 0339 50       		.byte	0x50
 2654 033a 9F       		.byte	0x9f
 2655 033b 00000000 		.4byte	0
 2656 033f 00000000 		.4byte	0
 2657              	.LLST10:
 2658 0343 00000000 		.4byte	.LVL50
 2659 0347 04000000 		.4byte	.LVL51
 2660 034b 0100     		.2byte	0x1
 2661 034d 50       		.byte	0x50
 2662 034e 04000000 		.4byte	.LVL51
 2663 0352 10000000 		.4byte	.LFE13
 2664 0356 0400     		.2byte	0x4
 2665 0358 F3       		.byte	0xf3
 2666 0359 01       		.uleb128 0x1
 2667 035a 50       		.byte	0x50
 2668 035b 9F       		.byte	0x9f
 2669 035c 00000000 		.4byte	0
 2670 0360 00000000 		.4byte	0
 2671              	.LLST11:
 2672 0364 00000000 		.4byte	.LVL52
 2673 0368 04000000 		.4byte	.LVL53
 2674 036c 0100     		.2byte	0x1
 2675 036e 50       		.byte	0x50
 2676 036f 04000000 		.4byte	.LVL53
 2677 0373 10000000 		.4byte	.LFE14
 2678 0377 0400     		.2byte	0x4
 2679 0379 F3       		.byte	0xf3
 2680 037a 01       		.uleb128 0x1
 2681 037b 50       		.byte	0x50
 2682 037c 9F       		.byte	0x9f
 2683 037d 00000000 		.4byte	0
 2684 0381 00000000 		.4byte	0
 2685              	.LLST12:
 2686 0385 00000000 		.4byte	.LVL54
 2687 0389 0C000000 		.4byte	.LVL55
 2688 038d 0100     		.2byte	0x1
 2689 038f 50       		.byte	0x50
 2690 0390 0C000000 		.4byte	.LVL55
 2691 0394 12000000 		.4byte	.LVL57
 2692 0398 0100     		.2byte	0x1
 2693 039a 54       		.byte	0x54
 2694 039b 12000000 		.4byte	.LVL57
 2695 039f 1C000000 		.4byte	.LFE15
 2696 03a3 0400     		.2byte	0x4
 2697 03a5 F3       		.byte	0xf3
 2698 03a6 01       		.uleb128 0x1
 2699 03a7 50       		.byte	0x50
 2700 03a8 9F       		.byte	0x9f
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 64


 2701 03a9 00000000 		.4byte	0
 2702 03ad 00000000 		.4byte	0
 2703              	.LLST13:
 2704 03b1 00000000 		.4byte	.LVL54
 2705 03b5 0F000000 		.4byte	.LVL56-1
 2706 03b9 0100     		.2byte	0x1
 2707 03bb 51       		.byte	0x51
 2708 03bc 0F000000 		.4byte	.LVL56-1
 2709 03c0 1C000000 		.4byte	.LFE15
 2710 03c4 0400     		.2byte	0x4
 2711 03c6 F3       		.byte	0xf3
 2712 03c7 01       		.uleb128 0x1
 2713 03c8 51       		.byte	0x51
 2714 03c9 9F       		.byte	0x9f
 2715 03ca 00000000 		.4byte	0
 2716 03ce 00000000 		.4byte	0
 2717              	.LLST14:
 2718 03d2 00000000 		.4byte	.LVL58
 2719 03d6 0C000000 		.4byte	.LVL59
 2720 03da 0100     		.2byte	0x1
 2721 03dc 50       		.byte	0x50
 2722 03dd 0C000000 		.4byte	.LVL59
 2723 03e1 12000000 		.4byte	.LVL61
 2724 03e5 0100     		.2byte	0x1
 2725 03e7 54       		.byte	0x54
 2726 03e8 12000000 		.4byte	.LVL61
 2727 03ec 1C000000 		.4byte	.LFE16
 2728 03f0 0400     		.2byte	0x4
 2729 03f2 F3       		.byte	0xf3
 2730 03f3 01       		.uleb128 0x1
 2731 03f4 50       		.byte	0x50
 2732 03f5 9F       		.byte	0x9f
 2733 03f6 00000000 		.4byte	0
 2734 03fa 00000000 		.4byte	0
 2735              	.LLST15:
 2736 03fe 00000000 		.4byte	.LVL58
 2737 0402 0F000000 		.4byte	.LVL60-1
 2738 0406 0100     		.2byte	0x1
 2739 0408 51       		.byte	0x51
 2740 0409 0F000000 		.4byte	.LVL60-1
 2741 040d 16000000 		.4byte	.LVL62
 2742 0411 0100     		.2byte	0x1
 2743 0413 55       		.byte	0x55
 2744 0414 16000000 		.4byte	.LVL62
 2745 0418 1C000000 		.4byte	.LFE16
 2746 041c 0800     		.2byte	0x8
 2747 041e F3       		.byte	0xf3
 2748 041f 01       		.uleb128 0x1
 2749 0420 50       		.byte	0x50
 2750 0421 32       		.byte	0x32
 2751 0422 24       		.byte	0x24
 2752 0423 73       		.byte	0x73
 2753 0424 00       		.sleb128 0
 2754 0425 22       		.byte	0x22
 2755 0426 00000000 		.4byte	0
 2756 042a 00000000 		.4byte	0
 2757              	.LLST16:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 65


 2758 042e 00000000 		.4byte	.LVL63
 2759 0432 0C000000 		.4byte	.LVL64
 2760 0436 0100     		.2byte	0x1
 2761 0438 50       		.byte	0x50
 2762 0439 0C000000 		.4byte	.LVL64
 2763 043d 44000000 		.4byte	.LVL67
 2764 0441 0100     		.2byte	0x1
 2765 0443 54       		.byte	0x54
 2766 0444 44000000 		.4byte	.LVL67
 2767 0448 5C000000 		.4byte	.LFE17
 2768 044c 0400     		.2byte	0x4
 2769 044e F3       		.byte	0xf3
 2770 044f 01       		.uleb128 0x1
 2771 0450 50       		.byte	0x50
 2772 0451 9F       		.byte	0x9f
 2773 0452 00000000 		.4byte	0
 2774 0456 00000000 		.4byte	0
 2775              	.LLST17:
 2776 045a 00000000 		.4byte	.LVL63
 2777 045e 0F000000 		.4byte	.LVL65-1
 2778 0462 0100     		.2byte	0x1
 2779 0464 51       		.byte	0x51
 2780 0465 0F000000 		.4byte	.LVL65-1
 2781 0469 1C000000 		.4byte	.LVL66
 2782 046d 0400     		.2byte	0x4
 2783 046f F3       		.byte	0xf3
 2784 0470 01       		.uleb128 0x1
 2785 0471 51       		.byte	0x51
 2786 0472 9F       		.byte	0x9f
 2787 0473 1C000000 		.4byte	.LVL66
 2788 0477 48000000 		.4byte	.LVL68
 2789 047b 0100     		.2byte	0x1
 2790 047d 51       		.byte	0x51
 2791 047e 00000000 		.4byte	0
 2792 0482 00000000 		.4byte	0
 2793              	.LLST18:
 2794 0486 00000000 		.4byte	.LVL71
 2795 048a 0C000000 		.4byte	.LVL72
 2796 048e 0100     		.2byte	0x1
 2797 0490 50       		.byte	0x50
 2798 0491 0C000000 		.4byte	.LVL72
 2799 0495 28000000 		.4byte	.LVL76
 2800 0499 0100     		.2byte	0x1
 2801 049b 55       		.byte	0x55
 2802 049c 28000000 		.4byte	.LVL76
 2803 04a0 40000000 		.4byte	.LFE18
 2804 04a4 0400     		.2byte	0x4
 2805 04a6 F3       		.byte	0xf3
 2806 04a7 01       		.uleb128 0x1
 2807 04a8 50       		.byte	0x50
 2808 04a9 9F       		.byte	0x9f
 2809 04aa 00000000 		.4byte	0
 2810 04ae 00000000 		.4byte	0
 2811              	.LLST19:
 2812 04b2 00000000 		.4byte	.LVL71
 2813 04b6 0F000000 		.4byte	.LVL73-1
 2814 04ba 0100     		.2byte	0x1
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 66


 2815 04bc 51       		.byte	0x51
 2816 04bd 0F000000 		.4byte	.LVL73-1
 2817 04c1 1C000000 		.4byte	.LVL74
 2818 04c5 0400     		.2byte	0x4
 2819 04c7 F3       		.byte	0xf3
 2820 04c8 01       		.uleb128 0x1
 2821 04c9 51       		.byte	0x51
 2822 04ca 9F       		.byte	0x9f
 2823 04cb 1C000000 		.4byte	.LVL74
 2824 04cf 25000000 		.4byte	.LVL75-1
 2825 04d3 0100     		.2byte	0x1
 2826 04d5 50       		.byte	0x50
 2827 04d6 00000000 		.4byte	0
 2828 04da 00000000 		.4byte	0
 2829              	.LLST20:
 2830 04de 00000000 		.4byte	.LVL78
 2831 04e2 0C000000 		.4byte	.LVL79
 2832 04e6 0100     		.2byte	0x1
 2833 04e8 50       		.byte	0x50
 2834 04e9 0C000000 		.4byte	.LVL79
 2835 04ed 2A000000 		.4byte	.LVL84
 2836 04f1 0100     		.2byte	0x1
 2837 04f3 54       		.byte	0x54
 2838 04f4 2A000000 		.4byte	.LVL84
 2839 04f8 48000000 		.4byte	.LFE19
 2840 04fc 0400     		.2byte	0x4
 2841 04fe F3       		.byte	0xf3
 2842 04ff 01       		.uleb128 0x1
 2843 0500 50       		.byte	0x50
 2844 0501 9F       		.byte	0x9f
 2845 0502 00000000 		.4byte	0
 2846 0506 00000000 		.4byte	0
 2847              	.LLST21:
 2848 050a 00000000 		.4byte	.LVL78
 2849 050e 0F000000 		.4byte	.LVL80-1
 2850 0512 0100     		.2byte	0x1
 2851 0514 51       		.byte	0x51
 2852 0515 0F000000 		.4byte	.LVL80-1
 2853 0519 1C000000 		.4byte	.LVL81
 2854 051d 0400     		.2byte	0x4
 2855 051f F3       		.byte	0xf3
 2856 0520 01       		.uleb128 0x1
 2857 0521 51       		.byte	0x51
 2858 0522 9F       		.byte	0x9f
 2859 0523 1C000000 		.4byte	.LVL81
 2860 0527 1F000000 		.4byte	.LVL82-1
 2861 052b 0100     		.2byte	0x1
 2862 052d 50       		.byte	0x50
 2863 052e 00000000 		.4byte	0
 2864 0532 00000000 		.4byte	0
 2865              		.section	.debug_aranges,"",%progbits
 2866 0000 AC000000 		.4byte	0xac
 2867 0004 0200     		.2byte	0x2
 2868 0006 00000000 		.4byte	.Ldebug_info0
 2869 000a 04       		.byte	0x4
 2870 000b 00       		.byte	0
 2871 000c 0000     		.2byte	0
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 67


 2872 000e 0000     		.2byte	0
 2873 0010 00000000 		.4byte	.LFB2
 2874 0014 A8010000 		.4byte	.LFE2-.LFB2
 2875 0018 00000000 		.4byte	.LFB3
 2876 001c 30000000 		.4byte	.LFE3-.LFB3
 2877 0020 00000000 		.4byte	.LFB1
 2878 0024 20000000 		.4byte	.LFE1-.LFB1
 2879 0028 00000000 		.4byte	.LFB4
 2880 002c 10000000 		.4byte	.LFE4-.LFB4
 2881 0030 00000000 		.4byte	.LFB5
 2882 0034 14000000 		.4byte	.LFE5-.LFB5
 2883 0038 00000000 		.4byte	.LFB6
 2884 003c 14000000 		.4byte	.LFE6-.LFB6
 2885 0040 00000000 		.4byte	.LFB7
 2886 0044 4C000000 		.4byte	.LFE7-.LFB7
 2887 0048 00000000 		.4byte	.LFB8
 2888 004c 38000000 		.4byte	.LFE8-.LFB8
 2889 0050 00000000 		.4byte	.LFB9
 2890 0054 10000000 		.4byte	.LFE9-.LFB9
 2891 0058 00000000 		.4byte	.LFB10
 2892 005c 14000000 		.4byte	.LFE10-.LFB10
 2893 0060 00000000 		.4byte	.LFB11
 2894 0064 1C000000 		.4byte	.LFE11-.LFB11
 2895 0068 00000000 		.4byte	.LFB12
 2896 006c 18000000 		.4byte	.LFE12-.LFB12
 2897 0070 00000000 		.4byte	.LFB13
 2898 0074 10000000 		.4byte	.LFE13-.LFB13
 2899 0078 00000000 		.4byte	.LFB14
 2900 007c 10000000 		.4byte	.LFE14-.LFB14
 2901 0080 00000000 		.4byte	.LFB15
 2902 0084 1C000000 		.4byte	.LFE15-.LFB15
 2903 0088 00000000 		.4byte	.LFB16
 2904 008c 1C000000 		.4byte	.LFE16-.LFB16
 2905 0090 00000000 		.4byte	.LFB17
 2906 0094 5C000000 		.4byte	.LFE17-.LFB17
 2907 0098 00000000 		.4byte	.LFB18
 2908 009c 40000000 		.4byte	.LFE18-.LFB18
 2909 00a0 00000000 		.4byte	.LFB19
 2910 00a4 48000000 		.4byte	.LFE19-.LFB19
 2911 00a8 00000000 		.4byte	0
 2912 00ac 00000000 		.4byte	0
 2913              		.section	.debug_ranges,"",%progbits
 2914              	.Ldebug_ranges0:
 2915 0000 00000000 		.4byte	.LFB2
 2916 0004 A8010000 		.4byte	.LFE2
 2917 0008 00000000 		.4byte	.LFB3
 2918 000c 30000000 		.4byte	.LFE3
 2919 0010 00000000 		.4byte	.LFB1
 2920 0014 20000000 		.4byte	.LFE1
 2921 0018 00000000 		.4byte	.LFB4
 2922 001c 10000000 		.4byte	.LFE4
 2923 0020 00000000 		.4byte	.LFB5
 2924 0024 14000000 		.4byte	.LFE5
 2925 0028 00000000 		.4byte	.LFB6
 2926 002c 14000000 		.4byte	.LFE6
 2927 0030 00000000 		.4byte	.LFB7
 2928 0034 4C000000 		.4byte	.LFE7
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 68


 2929 0038 00000000 		.4byte	.LFB8
 2930 003c 38000000 		.4byte	.LFE8
 2931 0040 00000000 		.4byte	.LFB9
 2932 0044 10000000 		.4byte	.LFE9
 2933 0048 00000000 		.4byte	.LFB10
 2934 004c 14000000 		.4byte	.LFE10
 2935 0050 00000000 		.4byte	.LFB11
 2936 0054 1C000000 		.4byte	.LFE11
 2937 0058 00000000 		.4byte	.LFB12
 2938 005c 18000000 		.4byte	.LFE12
 2939 0060 00000000 		.4byte	.LFB13
 2940 0064 10000000 		.4byte	.LFE13
 2941 0068 00000000 		.4byte	.LFB14
 2942 006c 10000000 		.4byte	.LFE14
 2943 0070 00000000 		.4byte	.LFB15
 2944 0074 1C000000 		.4byte	.LFE15
 2945 0078 00000000 		.4byte	.LFB16
 2946 007c 1C000000 		.4byte	.LFE16
 2947 0080 00000000 		.4byte	.LFB17
 2948 0084 5C000000 		.4byte	.LFE17
 2949 0088 00000000 		.4byte	.LFB18
 2950 008c 40000000 		.4byte	.LFE18
 2951 0090 00000000 		.4byte	.LFB19
 2952 0094 48000000 		.4byte	.LFE19
 2953 0098 00000000 		.4byte	0
 2954 009c 00000000 		.4byte	0
 2955              		.section	.debug_line,"",%progbits
 2956              	.Ldebug_line0:
 2957 0000 AC020000 		.section	.debug_str,"MS",%progbits,1
 2957      02004B00 
 2957      00000201 
 2957      FB0E0D00 
 2957      01010101 
 2958              	.LASF10:
 2959 0000 75696E74 		.ascii	"uint16\000"
 2959      313600
 2960              	.LASF50:
 2961 0007 61646347 		.ascii	"adcGain\000"
 2961      61696E00 
 2962              	.LASF24:
 2963 000f 636F756E 		.ascii	"counts\000"
 2963      747300
 2964              	.LASF55:
 2965 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2965      436F756E 
 2965      7473546F 
 2965      5F566F6C 
 2965      747300
 2966              	.LASF26:
 2967 0029 4144435F 		.ascii	"ADC_Init\000"
 2967      496E6974 
 2967      00
 2968              	.LASF65:
 2969 0032 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2969      43313120 
 2969      352E342E 
 2969      31203230 
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 69


 2969      31363036 
 2970 0065 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2970      20726576 
 2970      6973696F 
 2970      6E203233 
 2970      37373135 
 2971 0098 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2971      66756E63 
 2971      74696F6E 
 2971      2D736563 
 2971      74696F6E 
 2972              	.LASF7:
 2973 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2973      206C6F6E 
 2973      6720756E 
 2973      7369676E 
 2973      65642069 
 2974              	.LASF25:
 2975 00d7 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2975      496E7075 
 2975      7473506C 
 2975      6163656D 
 2975      656E7400 
 2976              	.LASF30:
 2977 00eb 4144435F 		.ascii	"ADC_StartConvert\000"
 2977      53746172 
 2977      74436F6E 
 2977      76657274 
 2977      00
 2978              	.LASF6:
 2979 00fc 6C6F6E67 		.ascii	"long long int\000"
 2979      206C6F6E 
 2979      6720696E 
 2979      7400
 2980              	.LASF0:
 2981 010a 7369676E 		.ascii	"signed char\000"
 2981      65642063 
 2981      68617200 
 2982              	.LASF32:
 2983 0116 73746174 		.ascii	"status\000"
 2983      757300
 2984              	.LASF13:
 2985 011d 696E7433 		.ascii	"int32\000"
 2985      3200
 2986              	.LASF28:
 2987 0123 4144435F 		.ascii	"ADC_Start\000"
 2987      53746172 
 2987      7400
 2988              	.LASF4:
 2989 012d 6C6F6E67 		.ascii	"long int\000"
 2989      20696E74 
 2989      00
 2990              	.LASF54:
 2991 0136 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2991      436F756E 
 2991      7473546F 
 2991      5F75566F 
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 70


 2991      6C747300 
 2992              	.LASF60:
 2993 014a 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2993      636F756E 
 2993      74735065 
 2993      72313056 
 2993      6F6C7400 
 2994              	.LASF9:
 2995 015e 75696E74 		.ascii	"uint8\000"
 2995      3800
 2996              	.LASF63:
 2997 0164 43794465 		.ascii	"CyDelayUs\000"
 2997      6C617955 
 2997      7300
 2998              	.LASF16:
 2999 016e 646F7562 		.ascii	"double\000"
 2999      6C6500
 3000              	.LASF11:
 3001 0175 75696E74 		.ascii	"uint32\000"
 3001      333200
 3002              	.LASF39:
 3003 017c 6D61736B 		.ascii	"mask\000"
 3003      00
 3004              	.LASF58:
 3005 0181 4144435F 		.ascii	"ADC_initVar\000"
 3005      696E6974 
 3005      56617200 
 3006              	.LASF35:
 3007 018d 7265744D 		.ascii	"retMode\000"
 3007      6F646500 
 3008              	.LASF45:
 3009 0195 4144435F 		.ascii	"ADC_SetLimitMask\000"
 3009      5365744C 
 3009      696D6974 
 3009      4D61736B 
 3009      00
 3010              	.LASF8:
 3011 01a6 756E7369 		.ascii	"unsigned int\000"
 3011      676E6564 
 3011      20696E74 
 3011      00
 3012              	.LASF68:
 3013 01b3 75566F6C 		.ascii	"uVolts\000"
 3013      747300
 3014              	.LASF5:
 3015 01ba 6C6F6E67 		.ascii	"long unsigned int\000"
 3015      20756E73 
 3015      69676E65 
 3015      6420696E 
 3015      7400
 3016              	.LASF46:
 3017 01cc 4144435F 		.ascii	"ADC_SetSatMask\000"
 3017      53657453 
 3017      61744D61 
 3017      736B00
 3018              	.LASF56:
 3019 01db 766F6C74 		.ascii	"volts\000"
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 71


 3019      7300
 3020              	.LASF23:
 3021 01e1 746D7052 		.ascii	"tmpRegVal\000"
 3021      65675661 
 3021      6C00
 3022              	.LASF3:
 3023 01eb 73686F72 		.ascii	"short unsigned int\000"
 3023      7420756E 
 3023      7369676E 
 3023      65642069 
 3023      6E7400
 3024              	.LASF62:
 3025 01fe 4379496E 		.ascii	"CyIntSetVector\000"
 3025      74536574 
 3025      56656374 
 3025      6F7200
 3026              	.LASF31:
 3027 020d 4144435F 		.ascii	"ADC_StopConvert\000"
 3027      53746F70 
 3027      436F6E76 
 3027      65727400 
 3028              	.LASF53:
 3029 021d 6D566F6C 		.ascii	"mVolts\000"
 3029      747300
 3030              	.LASF19:
 3031 0224 72656733 		.ascii	"reg32\000"
 3031      3200
 3032              	.LASF14:
 3033 022a 666C6F61 		.ascii	"float32\000"
 3033      74333200 
 3034              	.LASF21:
 3035 0232 73697A65 		.ascii	"sizetype\000"
 3035      74797065 
 3035      00
 3036              	.LASF42:
 3037 023b 6C6F774C 		.ascii	"lowLimit\000"
 3037      696D6974 
 3037      00
 3038              	.LASF20:
 3039 0244 6C6F6E67 		.ascii	"long double\000"
 3039      20646F75 
 3039      626C6500 
 3040              	.LASF43:
 3041 0250 4144435F 		.ascii	"ADC_SetHighLimit\000"
 3041      53657448 
 3041      6967684C 
 3041      696D6974 
 3041      00
 3042              	.LASF40:
 3043 0261 4144435F 		.ascii	"ADC_EnableInjection\000"
 3043      456E6162 
 3043      6C65496E 
 3043      6A656374 
 3043      696F6E00 
 3044              	.LASF33:
 3045 0275 4144435F 		.ascii	"ADC_IsEndConversion\000"
 3045      4973456E 
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 72


 3045      64436F6E 
 3045      76657273 
 3045      696F6E00 
 3046              	.LASF17:
 3047 0289 696E7436 		.ascii	"int64\000"
 3047      3400
 3048              	.LASF61:
 3049 028f 4379496E 		.ascii	"CyIntSetPriority\000"
 3049      74536574 
 3049      5072696F 
 3049      72697479 
 3049      00
 3050              	.LASF38:
 3051 02a0 4144435F 		.ascii	"ADC_SetChanMask\000"
 3051      53657443 
 3051      68616E4D 
 3051      61736B00 
 3052              	.LASF66:
 3053 02b0 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 3053      72617465 
 3053      645F536F 
 3053      75726365 
 3053      5C50536F 
 3054              	.LASF49:
 3055 02cd 4144435F 		.ascii	"ADC_SetGain\000"
 3055      53657447 
 3055      61696E00 
 3056              	.LASF15:
 3057 02d9 666C6F61 		.ascii	"float\000"
 3057      7400
 3058              	.LASF44:
 3059 02df 68696768 		.ascii	"highLimit\000"
 3059      4C696D69 
 3059      7400
 3060              	.LASF51:
 3061 02e9 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 3061      436F756E 
 3061      7473546F 
 3061      5F6D566F 
 3061      6C747300 
 3062              	.LASF41:
 3063 02fd 4144435F 		.ascii	"ADC_SetLowLimit\000"
 3063      5365744C 
 3063      6F774C69 
 3063      6D697400 
 3064              	.LASF64:
 3065 030d 43794861 		.ascii	"CyHalt\000"
 3065      6C7400
 3066              	.LASF1:
 3067 0314 756E7369 		.ascii	"unsigned char\000"
 3067      676E6564 
 3067      20636861 
 3067      7200
 3068              	.LASF59:
 3069 0322 4144435F 		.ascii	"ADC_offset\000"
 3069      6F666673 
 3069      657400
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 73


 3070              	.LASF2:
 3071 032d 73686F72 		.ascii	"short int\000"
 3071      7420696E 
 3071      7400
 3072              	.LASF29:
 3073 0337 4144435F 		.ascii	"ADC_Stop\000"
 3073      53746F70 
 3073      00
 3074              	.LASF67:
 3075 0340 433A5C55 		.ascii	"C:\\Users\\Larry\\Documents\\PSoC Creator\\bwsi\\ba"
 3075      73657273 
 3075      5C4C6172 
 3075      72795C44 
 3075      6F63756D 
 3076 036d 6E6B2D70 		.ascii	"nk-protocol\\bank-protocol.cydsn\000"
 3076      726F746F 
 3076      636F6C5C 
 3076      62616E6B 
 3076      2D70726F 
 3077              	.LASF22:
 3078 038d 63684E75 		.ascii	"chNum\000"
 3078      6D00
 3079              	.LASF36:
 3080 0393 6368616E 		.ascii	"chan\000"
 3080      00
 3081              	.LASF18:
 3082 0398 63686172 		.ascii	"char\000"
 3082      00
 3083              	.LASF57:
 3084 039d 4144435F 		.ascii	"ADC_channelsConfig\000"
 3084      6368616E 
 3084      6E656C73 
 3084      436F6E66 
 3084      696700
 3085              	.LASF48:
 3086 03b0 6F666673 		.ascii	"offset\000"
 3086      657400
 3087              	.LASF52:
 3088 03b7 61646343 		.ascii	"adcCounts\000"
 3088      6F756E74 
 3088      7300
 3089              	.LASF27:
 3090 03c1 4144435F 		.ascii	"ADC_Enable\000"
 3090      456E6162 
 3090      6C6500
 3091              	.LASF12:
 3092 03cc 696E7431 		.ascii	"int16\000"
 3092      3600
 3093              	.LASF47:
 3094 03d2 4144435F 		.ascii	"ADC_SetOffset\000"
 3094      5365744F 
 3094      66667365 
 3094      7400
 3095              	.LASF37:
 3096 03e0 72657375 		.ascii	"result\000"
 3096      6C7400
 3097              	.LASF34:
ARM GAS  C:\Users\Larry\AppData\Local\Temp\ccD8ijU7.s 			page 74


 3098 03e7 4144435F 		.ascii	"ADC_GetResult16\000"
 3098      47657452 
 3098      6573756C 
 3098      74313600 
 3099              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
